ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_cryp_des.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c"
  20              		.section	.text.CRYP_DES_ECB,"ax",%progbits
  21              		.align	1
  22              		.global	CRYP_DES_ECB
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	CRYP_DES_ECB:
  28              	.LVL0:
  29              	.LFB123:
   1:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /**
   2:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ******************************************************************************
   3:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @file    stm32f4xx_cryp_des.c
   4:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @author  MCD Application Team
   5:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @version V1.8.1
   6:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @date    27-January-2022
   7:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @brief   This file provides high level functions to encrypt and decrypt an 
   8:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          input message using DES in ECB/CBC modes.
   9:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          It uses the stm32f4xx_cryp.c/.h drivers to access the STM32F4xx CRYP
  10:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          peripheral.
  11:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  12:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** @verbatim
  13:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   
  14:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  ===================================================================
  15:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****                   ##### How to use this driver #####
  16:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  ===================================================================
  17:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  [..] 
  18:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****    (#) Enable The CRYP controller clock using 
  19:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****        RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_CRYP, ENABLE); function.
  20:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   
  21:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****    (#) Encrypt and decrypt using DES in ECB Mode using CRYP_DES_ECB() function.
  22:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   
  23:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****    (#) Encrypt and decrypt using DES in CBC Mode using CRYP_DES_CBC() function.
  24:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   
  25:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** @endverbatim
  26:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  27:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ******************************************************************************
  28:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @attention
  29:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 2


  30:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * Copyright (c) 2016 STMicroelectronics.
  31:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * All rights reserved.
  32:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  33:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * This software is licensed under terms that can be found in the LICENSE file
  34:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * in the root directory of this software component.
  35:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  36:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  37:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ******************************************************************************
  38:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  39:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  40:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Includes ------------------------------------------------------------------*/
  41:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** #include "stm32f4xx_cryp.h"
  42:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  43:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  44:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  45:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @{
  46:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  47:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  48:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /** @defgroup CRYP 
  49:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @brief CRYP driver modules
  50:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @{
  51:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  52:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  53:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private typedef -----------------------------------------------------------*/
  54:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private define ------------------------------------------------------------*/
  55:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** #define DESBUSY_TIMEOUT    ((uint32_t) 0x00010000)
  56:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  57:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private macro -------------------------------------------------------------*/
  58:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private variables ---------------------------------------------------------*/
  59:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private function prototypes -----------------------------------------------*/
  60:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private functions ---------------------------------------------------------*/
  61:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  62:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  63:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /** @defgroup CRYP_Private_Functions
  64:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @{
  65:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */ 
  66:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  67:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /** @defgroup CRYP_Group8 High Level DES functions
  68:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  *  @brief   High Level DES functions 
  69:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  *
  70:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** @verbatim   
  71:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  ===============================================================================
  72:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****                        ##### High Level DES functions #####
  73:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  ===============================================================================
  74:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** @endverbatim
  75:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @{
  76:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  77:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  78:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /**
  79:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @brief  Encrypt and decrypt using DES in ECB Mode
  80:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Mode: encryption or decryption Mode.
  81:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *           This parameter can be one of the following values:
  82:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            @arg MODE_ENCRYPT: Encryption
  83:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            @arg MODE_DECRYPT: Decryption
  84:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Key: Key used for DES algorithm.
  85:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 8.
  86:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Input: pointer to the Input buffer.
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 3


  87:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Output: pointer to the returned buffer.
  88:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @retval An ErrorStatus enumeration value:
  89:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          - SUCCESS: Operation done
  90:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          - ERROR: Operation failed
  91:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  92:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** ErrorStatus CRYP_DES_ECB(uint8_t Mode, uint8_t Key[8], uint8_t *Input, 
  93:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****                          uint32_t Ilength, uint8_t *Output)
  94:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** {
  30              		.loc 1 94 1 view -0
  31              		.cfi_startproc
  32              		@ args = 4, pretend = 0, frame = 56
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 94 1 is_stmt 0 view .LVU1
  35 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 24
  38              		.cfi_offset 4, -24
  39              		.cfi_offset 5, -20
  40              		.cfi_offset 6, -16
  41              		.cfi_offset 7, -12
  42              		.cfi_offset 8, -8
  43              		.cfi_offset 14, -4
  44 0004 8EB0     		sub	sp, sp, #56
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 80
  47 0006 0646     		mov	r6, r0
  48 0008 0D46     		mov	r5, r1
  49 000a 1F46     		mov	r7, r3
  95:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_InitTypeDef DES_CRYP_InitStructure;
  50              		.loc 1 95 3 is_stmt 1 view .LVU2
  96:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyInitTypeDef DES_CRYP_KeyInitStructure;
  51              		.loc 1 96 3 view .LVU3
  97:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   __IO uint32_t counter = 0;
  52              		.loc 1 97 3 view .LVU4
  53              		.loc 1 97 17 is_stmt 0 view .LVU5
  54 000c 0023     		movs	r3, #0
  55              	.LVL1:
  56              		.loc 1 97 17 view .LVU6
  57 000e 0193     		str	r3, [sp, #4]
  98:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t busystatus = 0;
  58              		.loc 1 98 3 is_stmt 1 view .LVU7
  59              	.LVL2:
  99:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ErrorStatus status = SUCCESS;
  60              		.loc 1 99 3 view .LVU8
 100:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t keyaddr    = (uint32_t)Key;
  61              		.loc 1 100 3 view .LVU9
 101:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t inputaddr  = (uint32_t)Input;
  62              		.loc 1 101 3 view .LVU10
  63              		.loc 1 101 12 is_stmt 0 view .LVU11
  64 0010 1446     		mov	r4, r2
  65              	.LVL3:
 102:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t outputaddr = (uint32_t)Output;
  66              		.loc 1 102 3 is_stmt 1 view .LVU12
  67              		.loc 1 102 12 is_stmt 0 view .LVU13
  68 0012 DDF85080 		ldr	r8, [sp, #80]
  69              	.LVL4:
 103:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t i = 0;
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 4


  70              		.loc 1 103 3 is_stmt 1 view .LVU14
 104:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 105:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Crypto structures initialisation*/
 106:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyStructInit(&DES_CRYP_KeyInitStructure);
  71              		.loc 1 106 3 view .LVU15
  72 0016 02A8     		add	r0, sp, #8
  73              	.LVL5:
  74              		.loc 1 106 3 is_stmt 0 view .LVU16
  75 0018 FFF7FEFF 		bl	CRYP_KeyStructInit
  76              	.LVL6:
 107:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 108:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Crypto Init for Encryption process */
 109:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   if( Mode == MODE_ENCRYPT ) /* DES encryption */
  77              		.loc 1 109 3 is_stmt 1 view .LVU17
  78              		.loc 1 109 5 is_stmt 0 view .LVU18
  79 001c 012E     		cmp	r6, #1
  80 001e 1DD0     		beq	.L13
 110:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 111:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****      DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 112:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 113:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   else/* if( Mode == MODE_DECRYPT )*/ /* DES decryption */
 114:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {      
 115:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****      DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Decrypt;
  81              		.loc 1 115 6 is_stmt 1 view .LVU19
  82              		.loc 1 115 43 is_stmt 0 view .LVU20
  83 0020 0423     		movs	r3, #4
  84 0022 0A93     		str	r3, [sp, #40]
  85              	.L3:
 116:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 117:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 118:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_DES_ECB;
  86              		.loc 1 118 3 is_stmt 1 view .LVU21
  87              		.loc 1 118 40 is_stmt 0 view .LVU22
  88 0024 1023     		movs	r3, #16
  89 0026 0B93     		str	r3, [sp, #44]
 119:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
  90              		.loc 1 119 3 is_stmt 1 view .LVU23
  91              		.loc 1 119 40 is_stmt 0 view .LVU24
  92 0028 8023     		movs	r3, #128
  93 002a 0C93     		str	r3, [sp, #48]
 120:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Init(&DES_CRYP_InitStructure);
  94              		.loc 1 120 3 is_stmt 1 view .LVU25
  95 002c 0AA8     		add	r0, sp, #40
  96 002e FFF7FEFF 		bl	CRYP_Init
  97              	.LVL7:
 121:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 122:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Key Initialisation */
 123:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
  98              		.loc 1 123 3 view .LVU26
  99              		.loc 1 123 45 is_stmt 0 view .LVU27
 100 0032 2B68     		ldr	r3, [r5]
 101              	.LVL8:
 102              	.LBB14:
 103              	.LBI14:
 104              		.file 2 "libraries/CMSIS/include/core_cmInstr.h"
   1:libraries/CMSIS/include/core_cmInstr.h **** /**************************************************************************//**
   2:libraries/CMSIS/include/core_cmInstr.h ****  * @file     core_cmInstr.h
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 5


   3:libraries/CMSIS/include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:libraries/CMSIS/include/core_cmInstr.h ****  * @version  V4.10
   5:libraries/CMSIS/include/core_cmInstr.h ****  * @date     18. March 2015
   6:libraries/CMSIS/include/core_cmInstr.h ****  *
   7:libraries/CMSIS/include/core_cmInstr.h ****  * @note
   8:libraries/CMSIS/include/core_cmInstr.h ****  *
   9:libraries/CMSIS/include/core_cmInstr.h ****  ******************************************************************************/
  10:libraries/CMSIS/include/core_cmInstr.h **** /* Copyright (c) 2009 - 2014 ARM LIMITED
  11:libraries/CMSIS/include/core_cmInstr.h **** 
  12:libraries/CMSIS/include/core_cmInstr.h ****    All rights reserved.
  13:libraries/CMSIS/include/core_cmInstr.h ****    Redistribution and use in source and binary forms, with or without
  14:libraries/CMSIS/include/core_cmInstr.h ****    modification, are permitted provided that the following conditions are met:
  15:libraries/CMSIS/include/core_cmInstr.h ****    - Redistributions of source code must retain the above copyright
  16:libraries/CMSIS/include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer.
  17:libraries/CMSIS/include/core_cmInstr.h ****    - Redistributions in binary form must reproduce the above copyright
  18:libraries/CMSIS/include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer in the
  19:libraries/CMSIS/include/core_cmInstr.h ****      documentation and/or other materials provided with the distribution.
  20:libraries/CMSIS/include/core_cmInstr.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:libraries/CMSIS/include/core_cmInstr.h ****      to endorse or promote products derived from this software without
  22:libraries/CMSIS/include/core_cmInstr.h ****      specific prior written permission.
  23:libraries/CMSIS/include/core_cmInstr.h ****    *
  24:libraries/CMSIS/include/core_cmInstr.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:libraries/CMSIS/include/core_cmInstr.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:libraries/CMSIS/include/core_cmInstr.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:libraries/CMSIS/include/core_cmInstr.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:libraries/CMSIS/include/core_cmInstr.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:libraries/CMSIS/include/core_cmInstr.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:libraries/CMSIS/include/core_cmInstr.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:libraries/CMSIS/include/core_cmInstr.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:libraries/CMSIS/include/core_cmInstr.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:libraries/CMSIS/include/core_cmInstr.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:libraries/CMSIS/include/core_cmInstr.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:libraries/CMSIS/include/core_cmInstr.h ****    ---------------------------------------------------------------------------*/
  36:libraries/CMSIS/include/core_cmInstr.h **** 
  37:libraries/CMSIS/include/core_cmInstr.h **** 
  38:libraries/CMSIS/include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  39:libraries/CMSIS/include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  40:libraries/CMSIS/include/core_cmInstr.h **** 
  41:libraries/CMSIS/include/core_cmInstr.h **** 
  42:libraries/CMSIS/include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  43:libraries/CMSIS/include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  44:libraries/CMSIS/include/core_cmInstr.h ****   Access to dedicated instructions
  45:libraries/CMSIS/include/core_cmInstr.h ****   @{
  46:libraries/CMSIS/include/core_cmInstr.h **** */
  47:libraries/CMSIS/include/core_cmInstr.h **** 
  48:libraries/CMSIS/include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:libraries/CMSIS/include/core_cmInstr.h **** /* ARM armcc specific functions */
  50:libraries/CMSIS/include/core_cmInstr.h **** 
  51:libraries/CMSIS/include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  52:libraries/CMSIS/include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:libraries/CMSIS/include/core_cmInstr.h **** #endif
  54:libraries/CMSIS/include/core_cmInstr.h **** 
  55:libraries/CMSIS/include/core_cmInstr.h **** 
  56:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  No Operation
  57:libraries/CMSIS/include/core_cmInstr.h **** 
  58:libraries/CMSIS/include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  59:libraries/CMSIS/include/core_cmInstr.h ****  */
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 6


  60:libraries/CMSIS/include/core_cmInstr.h **** #define __NOP                             __nop
  61:libraries/CMSIS/include/core_cmInstr.h **** 
  62:libraries/CMSIS/include/core_cmInstr.h **** 
  63:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  64:libraries/CMSIS/include/core_cmInstr.h **** 
  65:libraries/CMSIS/include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  66:libraries/CMSIS/include/core_cmInstr.h ****     until one of a number of events occurs.
  67:libraries/CMSIS/include/core_cmInstr.h ****  */
  68:libraries/CMSIS/include/core_cmInstr.h **** #define __WFI                             __wfi
  69:libraries/CMSIS/include/core_cmInstr.h **** 
  70:libraries/CMSIS/include/core_cmInstr.h **** 
  71:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Event
  72:libraries/CMSIS/include/core_cmInstr.h **** 
  73:libraries/CMSIS/include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  74:libraries/CMSIS/include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  75:libraries/CMSIS/include/core_cmInstr.h ****  */
  76:libraries/CMSIS/include/core_cmInstr.h **** #define __WFE                             __wfe
  77:libraries/CMSIS/include/core_cmInstr.h **** 
  78:libraries/CMSIS/include/core_cmInstr.h **** 
  79:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Send Event
  80:libraries/CMSIS/include/core_cmInstr.h **** 
  81:libraries/CMSIS/include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  82:libraries/CMSIS/include/core_cmInstr.h ****  */
  83:libraries/CMSIS/include/core_cmInstr.h **** #define __SEV                             __sev
  84:libraries/CMSIS/include/core_cmInstr.h **** 
  85:libraries/CMSIS/include/core_cmInstr.h **** 
  86:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  87:libraries/CMSIS/include/core_cmInstr.h **** 
  88:libraries/CMSIS/include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  89:libraries/CMSIS/include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  90:libraries/CMSIS/include/core_cmInstr.h ****     memory, after the instruction has been completed.
  91:libraries/CMSIS/include/core_cmInstr.h ****  */
  92:libraries/CMSIS/include/core_cmInstr.h **** #define __ISB() do {\
  93:libraries/CMSIS/include/core_cmInstr.h ****                    __schedule_barrier();\
  94:libraries/CMSIS/include/core_cmInstr.h ****                    __isb(0xF);\
  95:libraries/CMSIS/include/core_cmInstr.h ****                    __schedule_barrier();\
  96:libraries/CMSIS/include/core_cmInstr.h ****                 } while (0)
  97:libraries/CMSIS/include/core_cmInstr.h **** 
  98:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  99:libraries/CMSIS/include/core_cmInstr.h **** 
 100:libraries/CMSIS/include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 101:libraries/CMSIS/include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 102:libraries/CMSIS/include/core_cmInstr.h ****  */
 103:libraries/CMSIS/include/core_cmInstr.h **** #define __DSB() do {\
 104:libraries/CMSIS/include/core_cmInstr.h ****                    __schedule_barrier();\
 105:libraries/CMSIS/include/core_cmInstr.h ****                    __dsb(0xF);\
 106:libraries/CMSIS/include/core_cmInstr.h ****                    __schedule_barrier();\
 107:libraries/CMSIS/include/core_cmInstr.h ****                 } while (0)
 108:libraries/CMSIS/include/core_cmInstr.h **** 
 109:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 110:libraries/CMSIS/include/core_cmInstr.h **** 
 111:libraries/CMSIS/include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 112:libraries/CMSIS/include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 113:libraries/CMSIS/include/core_cmInstr.h ****  */
 114:libraries/CMSIS/include/core_cmInstr.h **** #define __DMB() do {\
 115:libraries/CMSIS/include/core_cmInstr.h ****                    __schedule_barrier();\
 116:libraries/CMSIS/include/core_cmInstr.h ****                    __dmb(0xF);\
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 7


 117:libraries/CMSIS/include/core_cmInstr.h ****                    __schedule_barrier();\
 118:libraries/CMSIS/include/core_cmInstr.h ****                 } while (0)
 119:libraries/CMSIS/include/core_cmInstr.h **** 
 120:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 121:libraries/CMSIS/include/core_cmInstr.h **** 
 122:libraries/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 123:libraries/CMSIS/include/core_cmInstr.h **** 
 124:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 125:libraries/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 126:libraries/CMSIS/include/core_cmInstr.h ****  */
 127:libraries/CMSIS/include/core_cmInstr.h **** #define __REV                             __rev
 128:libraries/CMSIS/include/core_cmInstr.h **** 
 129:libraries/CMSIS/include/core_cmInstr.h **** 
 130:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 131:libraries/CMSIS/include/core_cmInstr.h **** 
 132:libraries/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 133:libraries/CMSIS/include/core_cmInstr.h **** 
 134:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 135:libraries/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 136:libraries/CMSIS/include/core_cmInstr.h ****  */
 137:libraries/CMSIS/include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 138:libraries/CMSIS/include/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 139:libraries/CMSIS/include/core_cmInstr.h **** {
 140:libraries/CMSIS/include/core_cmInstr.h ****   rev16 r0, r0
 141:libraries/CMSIS/include/core_cmInstr.h ****   bx lr
 142:libraries/CMSIS/include/core_cmInstr.h **** }
 143:libraries/CMSIS/include/core_cmInstr.h **** #endif
 144:libraries/CMSIS/include/core_cmInstr.h **** 
 145:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 146:libraries/CMSIS/include/core_cmInstr.h **** 
 147:libraries/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 148:libraries/CMSIS/include/core_cmInstr.h **** 
 149:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 150:libraries/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 151:libraries/CMSIS/include/core_cmInstr.h ****  */
 152:libraries/CMSIS/include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 153:libraries/CMSIS/include/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 154:libraries/CMSIS/include/core_cmInstr.h **** {
 155:libraries/CMSIS/include/core_cmInstr.h ****   revsh r0, r0
 156:libraries/CMSIS/include/core_cmInstr.h ****   bx lr
 157:libraries/CMSIS/include/core_cmInstr.h **** }
 158:libraries/CMSIS/include/core_cmInstr.h **** #endif
 159:libraries/CMSIS/include/core_cmInstr.h **** 
 160:libraries/CMSIS/include/core_cmInstr.h **** 
 161:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 162:libraries/CMSIS/include/core_cmInstr.h **** 
 163:libraries/CMSIS/include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 164:libraries/CMSIS/include/core_cmInstr.h **** 
 165:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 166:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 167:libraries/CMSIS/include/core_cmInstr.h ****     \return               Rotated value
 168:libraries/CMSIS/include/core_cmInstr.h ****  */
 169:libraries/CMSIS/include/core_cmInstr.h **** #define __ROR                             __ror
 170:libraries/CMSIS/include/core_cmInstr.h **** 
 171:libraries/CMSIS/include/core_cmInstr.h **** 
 172:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Breakpoint
 173:libraries/CMSIS/include/core_cmInstr.h **** 
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 8


 174:libraries/CMSIS/include/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 175:libraries/CMSIS/include/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 176:libraries/CMSIS/include/core_cmInstr.h **** 
 177:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 178:libraries/CMSIS/include/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 179:libraries/CMSIS/include/core_cmInstr.h ****  */
 180:libraries/CMSIS/include/core_cmInstr.h **** #define __BKPT(value)                       __breakpoint(value)
 181:libraries/CMSIS/include/core_cmInstr.h **** 
 182:libraries/CMSIS/include/core_cmInstr.h **** 
 183:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 184:libraries/CMSIS/include/core_cmInstr.h **** 
 185:libraries/CMSIS/include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 186:libraries/CMSIS/include/core_cmInstr.h **** 
 187:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 188:libraries/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 189:libraries/CMSIS/include/core_cmInstr.h ****  */
 190:libraries/CMSIS/include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 191:libraries/CMSIS/include/core_cmInstr.h ****   #define __RBIT                          __rbit
 192:libraries/CMSIS/include/core_cmInstr.h **** #else
 193:libraries/CMSIS/include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 194:libraries/CMSIS/include/core_cmInstr.h **** {
 195:libraries/CMSIS/include/core_cmInstr.h ****   uint32_t result;
 196:libraries/CMSIS/include/core_cmInstr.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; // extra shift needed at end
 197:libraries/CMSIS/include/core_cmInstr.h **** 
 198:libraries/CMSIS/include/core_cmInstr.h ****   result = value;                      // r will be reversed bits of v; first get LSB of v
 199:libraries/CMSIS/include/core_cmInstr.h ****   for (value >>= 1; value; value >>= 1)
 200:libraries/CMSIS/include/core_cmInstr.h ****   {
 201:libraries/CMSIS/include/core_cmInstr.h ****     result <<= 1;
 202:libraries/CMSIS/include/core_cmInstr.h ****     result |= value & 1;
 203:libraries/CMSIS/include/core_cmInstr.h ****     s--;
 204:libraries/CMSIS/include/core_cmInstr.h ****   }
 205:libraries/CMSIS/include/core_cmInstr.h ****   result <<= s;                       // shift when v's highest bits are zero
 206:libraries/CMSIS/include/core_cmInstr.h ****   return(result);
 207:libraries/CMSIS/include/core_cmInstr.h **** }
 208:libraries/CMSIS/include/core_cmInstr.h **** #endif
 209:libraries/CMSIS/include/core_cmInstr.h **** 
 210:libraries/CMSIS/include/core_cmInstr.h **** 
 211:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Count leading zeros
 212:libraries/CMSIS/include/core_cmInstr.h **** 
 213:libraries/CMSIS/include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 214:libraries/CMSIS/include/core_cmInstr.h **** 
 215:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 216:libraries/CMSIS/include/core_cmInstr.h ****     \return             number of leading zeros in value
 217:libraries/CMSIS/include/core_cmInstr.h ****  */
 218:libraries/CMSIS/include/core_cmInstr.h **** #define __CLZ                             __clz
 219:libraries/CMSIS/include/core_cmInstr.h **** 
 220:libraries/CMSIS/include/core_cmInstr.h **** 
 221:libraries/CMSIS/include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 222:libraries/CMSIS/include/core_cmInstr.h **** 
 223:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 224:libraries/CMSIS/include/core_cmInstr.h **** 
 225:libraries/CMSIS/include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 8 bit value.
 226:libraries/CMSIS/include/core_cmInstr.h **** 
 227:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 228:libraries/CMSIS/include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 229:libraries/CMSIS/include/core_cmInstr.h ****  */
 230:libraries/CMSIS/include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 9


 231:libraries/CMSIS/include/core_cmInstr.h **** 
 232:libraries/CMSIS/include/core_cmInstr.h **** 
 233:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 234:libraries/CMSIS/include/core_cmInstr.h **** 
 235:libraries/CMSIS/include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 16 bit values.
 236:libraries/CMSIS/include/core_cmInstr.h **** 
 237:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 238:libraries/CMSIS/include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 239:libraries/CMSIS/include/core_cmInstr.h ****  */
 240:libraries/CMSIS/include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 241:libraries/CMSIS/include/core_cmInstr.h **** 
 242:libraries/CMSIS/include/core_cmInstr.h **** 
 243:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 244:libraries/CMSIS/include/core_cmInstr.h **** 
 245:libraries/CMSIS/include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 32 bit values.
 246:libraries/CMSIS/include/core_cmInstr.h **** 
 247:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 248:libraries/CMSIS/include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 249:libraries/CMSIS/include/core_cmInstr.h ****  */
 250:libraries/CMSIS/include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 251:libraries/CMSIS/include/core_cmInstr.h **** 
 252:libraries/CMSIS/include/core_cmInstr.h **** 
 253:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 254:libraries/CMSIS/include/core_cmInstr.h **** 
 255:libraries/CMSIS/include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 8 bit values.
 256:libraries/CMSIS/include/core_cmInstr.h **** 
 257:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 258:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 259:libraries/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 260:libraries/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 261:libraries/CMSIS/include/core_cmInstr.h ****  */
 262:libraries/CMSIS/include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 263:libraries/CMSIS/include/core_cmInstr.h **** 
 264:libraries/CMSIS/include/core_cmInstr.h **** 
 265:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 266:libraries/CMSIS/include/core_cmInstr.h **** 
 267:libraries/CMSIS/include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 16 bit values.
 268:libraries/CMSIS/include/core_cmInstr.h **** 
 269:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 270:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 271:libraries/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 272:libraries/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 273:libraries/CMSIS/include/core_cmInstr.h ****  */
 274:libraries/CMSIS/include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 275:libraries/CMSIS/include/core_cmInstr.h **** 
 276:libraries/CMSIS/include/core_cmInstr.h **** 
 277:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 278:libraries/CMSIS/include/core_cmInstr.h **** 
 279:libraries/CMSIS/include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 32 bit values.
 280:libraries/CMSIS/include/core_cmInstr.h **** 
 281:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 282:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 283:libraries/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 284:libraries/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 285:libraries/CMSIS/include/core_cmInstr.h ****  */
 286:libraries/CMSIS/include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 287:libraries/CMSIS/include/core_cmInstr.h **** 
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 10


 288:libraries/CMSIS/include/core_cmInstr.h **** 
 289:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 290:libraries/CMSIS/include/core_cmInstr.h **** 
 291:libraries/CMSIS/include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 292:libraries/CMSIS/include/core_cmInstr.h **** 
 293:libraries/CMSIS/include/core_cmInstr.h ****  */
 294:libraries/CMSIS/include/core_cmInstr.h **** #define __CLREX                           __clrex
 295:libraries/CMSIS/include/core_cmInstr.h **** 
 296:libraries/CMSIS/include/core_cmInstr.h **** 
 297:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Signed Saturate
 298:libraries/CMSIS/include/core_cmInstr.h **** 
 299:libraries/CMSIS/include/core_cmInstr.h ****     This function saturates a signed value.
 300:libraries/CMSIS/include/core_cmInstr.h **** 
 301:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 302:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 303:libraries/CMSIS/include/core_cmInstr.h ****     \return             Saturated value
 304:libraries/CMSIS/include/core_cmInstr.h ****  */
 305:libraries/CMSIS/include/core_cmInstr.h **** #define __SSAT                            __ssat
 306:libraries/CMSIS/include/core_cmInstr.h **** 
 307:libraries/CMSIS/include/core_cmInstr.h **** 
 308:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 309:libraries/CMSIS/include/core_cmInstr.h **** 
 310:libraries/CMSIS/include/core_cmInstr.h ****     This function saturates an unsigned value.
 311:libraries/CMSIS/include/core_cmInstr.h **** 
 312:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 313:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 314:libraries/CMSIS/include/core_cmInstr.h ****     \return             Saturated value
 315:libraries/CMSIS/include/core_cmInstr.h ****  */
 316:libraries/CMSIS/include/core_cmInstr.h **** #define __USAT                            __usat
 317:libraries/CMSIS/include/core_cmInstr.h **** 
 318:libraries/CMSIS/include/core_cmInstr.h **** 
 319:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Rotate Right with Extend (32 bit)
 320:libraries/CMSIS/include/core_cmInstr.h **** 
 321:libraries/CMSIS/include/core_cmInstr.h ****     This function moves each bit of a bitstring right by one bit.
 322:libraries/CMSIS/include/core_cmInstr.h ****     The carry input is shifted in at the left end of the bitstring.
 323:libraries/CMSIS/include/core_cmInstr.h **** 
 324:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 325:libraries/CMSIS/include/core_cmInstr.h ****     \return               Rotated value
 326:libraries/CMSIS/include/core_cmInstr.h ****  */
 327:libraries/CMSIS/include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 328:libraries/CMSIS/include/core_cmInstr.h **** __attribute__((section(".rrx_text"))) __STATIC_INLINE __ASM uint32_t __RRX(uint32_t value)
 329:libraries/CMSIS/include/core_cmInstr.h **** {
 330:libraries/CMSIS/include/core_cmInstr.h ****   rrx r0, r0
 331:libraries/CMSIS/include/core_cmInstr.h ****   bx lr
 332:libraries/CMSIS/include/core_cmInstr.h **** }
 333:libraries/CMSIS/include/core_cmInstr.h **** #endif
 334:libraries/CMSIS/include/core_cmInstr.h **** 
 335:libraries/CMSIS/include/core_cmInstr.h **** 
 336:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (8 bit)
 337:libraries/CMSIS/include/core_cmInstr.h **** 
 338:libraries/CMSIS/include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 8 bit value.
 339:libraries/CMSIS/include/core_cmInstr.h **** 
 340:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 341:libraries/CMSIS/include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 342:libraries/CMSIS/include/core_cmInstr.h ****  */
 343:libraries/CMSIS/include/core_cmInstr.h **** #define __LDRBT(ptr)                      ((uint8_t )  __ldrt(ptr))
 344:libraries/CMSIS/include/core_cmInstr.h **** 
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 11


 345:libraries/CMSIS/include/core_cmInstr.h **** 
 346:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (16 bit)
 347:libraries/CMSIS/include/core_cmInstr.h **** 
 348:libraries/CMSIS/include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 16 bit values.
 349:libraries/CMSIS/include/core_cmInstr.h **** 
 350:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 351:libraries/CMSIS/include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 352:libraries/CMSIS/include/core_cmInstr.h ****  */
 353:libraries/CMSIS/include/core_cmInstr.h **** #define __LDRHT(ptr)                      ((uint16_t)  __ldrt(ptr))
 354:libraries/CMSIS/include/core_cmInstr.h **** 
 355:libraries/CMSIS/include/core_cmInstr.h **** 
 356:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (32 bit)
 357:libraries/CMSIS/include/core_cmInstr.h **** 
 358:libraries/CMSIS/include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 32 bit values.
 359:libraries/CMSIS/include/core_cmInstr.h **** 
 360:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 361:libraries/CMSIS/include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 362:libraries/CMSIS/include/core_cmInstr.h ****  */
 363:libraries/CMSIS/include/core_cmInstr.h **** #define __LDRT(ptr)                       ((uint32_t ) __ldrt(ptr))
 364:libraries/CMSIS/include/core_cmInstr.h **** 
 365:libraries/CMSIS/include/core_cmInstr.h **** 
 366:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  STRT Unprivileged (8 bit)
 367:libraries/CMSIS/include/core_cmInstr.h **** 
 368:libraries/CMSIS/include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 8 bit values.
 369:libraries/CMSIS/include/core_cmInstr.h **** 
 370:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 371:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 372:libraries/CMSIS/include/core_cmInstr.h ****  */
 373:libraries/CMSIS/include/core_cmInstr.h **** #define __STRBT(value, ptr)               __strt(value, ptr)
 374:libraries/CMSIS/include/core_cmInstr.h **** 
 375:libraries/CMSIS/include/core_cmInstr.h **** 
 376:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  STRT Unprivileged (16 bit)
 377:libraries/CMSIS/include/core_cmInstr.h **** 
 378:libraries/CMSIS/include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 16 bit values.
 379:libraries/CMSIS/include/core_cmInstr.h **** 
 380:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 381:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 382:libraries/CMSIS/include/core_cmInstr.h ****  */
 383:libraries/CMSIS/include/core_cmInstr.h **** #define __STRHT(value, ptr)               __strt(value, ptr)
 384:libraries/CMSIS/include/core_cmInstr.h **** 
 385:libraries/CMSIS/include/core_cmInstr.h **** 
 386:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  STRT Unprivileged (32 bit)
 387:libraries/CMSIS/include/core_cmInstr.h **** 
 388:libraries/CMSIS/include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 32 bit values.
 389:libraries/CMSIS/include/core_cmInstr.h **** 
 390:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 391:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 392:libraries/CMSIS/include/core_cmInstr.h ****  */
 393:libraries/CMSIS/include/core_cmInstr.h **** #define __STRT(value, ptr)                __strt(value, ptr)
 394:libraries/CMSIS/include/core_cmInstr.h **** 
 395:libraries/CMSIS/include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300) */
 396:libraries/CMSIS/include/core_cmInstr.h **** 
 397:libraries/CMSIS/include/core_cmInstr.h **** 
 398:libraries/CMSIS/include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 399:libraries/CMSIS/include/core_cmInstr.h **** /* GNU gcc specific functions */
 400:libraries/CMSIS/include/core_cmInstr.h **** 
 401:libraries/CMSIS/include/core_cmInstr.h **** /* Define macros for porting to both thumb1 and thumb2.
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 12


 402:libraries/CMSIS/include/core_cmInstr.h ****  * For thumb1, use low register (r0-r7), specified by constrant "l"
 403:libraries/CMSIS/include/core_cmInstr.h ****  * Otherwise, use general registers, specified by constrant "r" */
 404:libraries/CMSIS/include/core_cmInstr.h **** #if defined (__thumb__) && !defined (__thumb2__)
 405:libraries/CMSIS/include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 406:libraries/CMSIS/include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 407:libraries/CMSIS/include/core_cmInstr.h **** #else
 408:libraries/CMSIS/include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 409:libraries/CMSIS/include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 410:libraries/CMSIS/include/core_cmInstr.h **** #endif
 411:libraries/CMSIS/include/core_cmInstr.h **** 
 412:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  No Operation
 413:libraries/CMSIS/include/core_cmInstr.h **** 
 414:libraries/CMSIS/include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 415:libraries/CMSIS/include/core_cmInstr.h ****  */
 416:libraries/CMSIS/include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 417:libraries/CMSIS/include/core_cmInstr.h **** {
 418:libraries/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("nop");
 419:libraries/CMSIS/include/core_cmInstr.h **** }
 420:libraries/CMSIS/include/core_cmInstr.h **** 
 421:libraries/CMSIS/include/core_cmInstr.h **** 
 422:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 423:libraries/CMSIS/include/core_cmInstr.h **** 
 424:libraries/CMSIS/include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 425:libraries/CMSIS/include/core_cmInstr.h ****     until one of a number of events occurs.
 426:libraries/CMSIS/include/core_cmInstr.h ****  */
 427:libraries/CMSIS/include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 428:libraries/CMSIS/include/core_cmInstr.h **** {
 429:libraries/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("wfi");
 430:libraries/CMSIS/include/core_cmInstr.h **** }
 431:libraries/CMSIS/include/core_cmInstr.h **** 
 432:libraries/CMSIS/include/core_cmInstr.h **** 
 433:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Event
 434:libraries/CMSIS/include/core_cmInstr.h **** 
 435:libraries/CMSIS/include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 436:libraries/CMSIS/include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 437:libraries/CMSIS/include/core_cmInstr.h ****  */
 438:libraries/CMSIS/include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 439:libraries/CMSIS/include/core_cmInstr.h **** {
 440:libraries/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("wfe");
 441:libraries/CMSIS/include/core_cmInstr.h **** }
 442:libraries/CMSIS/include/core_cmInstr.h **** 
 443:libraries/CMSIS/include/core_cmInstr.h **** 
 444:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Send Event
 445:libraries/CMSIS/include/core_cmInstr.h **** 
 446:libraries/CMSIS/include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 447:libraries/CMSIS/include/core_cmInstr.h ****  */
 448:libraries/CMSIS/include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 449:libraries/CMSIS/include/core_cmInstr.h **** {
 450:libraries/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("sev");
 451:libraries/CMSIS/include/core_cmInstr.h **** }
 452:libraries/CMSIS/include/core_cmInstr.h **** 
 453:libraries/CMSIS/include/core_cmInstr.h **** 
 454:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 455:libraries/CMSIS/include/core_cmInstr.h **** 
 456:libraries/CMSIS/include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 457:libraries/CMSIS/include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 458:libraries/CMSIS/include/core_cmInstr.h ****     memory, after the instruction has been completed.
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 13


 459:libraries/CMSIS/include/core_cmInstr.h ****  */
 460:libraries/CMSIS/include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 461:libraries/CMSIS/include/core_cmInstr.h **** {
 462:libraries/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("isb 0xF":::"memory");
 463:libraries/CMSIS/include/core_cmInstr.h **** }
 464:libraries/CMSIS/include/core_cmInstr.h **** 
 465:libraries/CMSIS/include/core_cmInstr.h **** 
 466:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 467:libraries/CMSIS/include/core_cmInstr.h **** 
 468:libraries/CMSIS/include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 469:libraries/CMSIS/include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 470:libraries/CMSIS/include/core_cmInstr.h ****  */
 471:libraries/CMSIS/include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 472:libraries/CMSIS/include/core_cmInstr.h **** {
 473:libraries/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("dsb 0xF":::"memory");
 474:libraries/CMSIS/include/core_cmInstr.h **** }
 475:libraries/CMSIS/include/core_cmInstr.h **** 
 476:libraries/CMSIS/include/core_cmInstr.h **** 
 477:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 478:libraries/CMSIS/include/core_cmInstr.h **** 
 479:libraries/CMSIS/include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 480:libraries/CMSIS/include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 481:libraries/CMSIS/include/core_cmInstr.h ****  */
 482:libraries/CMSIS/include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 483:libraries/CMSIS/include/core_cmInstr.h **** {
 484:libraries/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("dmb 0xF":::"memory");
 485:libraries/CMSIS/include/core_cmInstr.h **** }
 486:libraries/CMSIS/include/core_cmInstr.h **** 
 487:libraries/CMSIS/include/core_cmInstr.h **** 
 488:libraries/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 489:libraries/CMSIS/include/core_cmInstr.h **** 
 490:libraries/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 491:libraries/CMSIS/include/core_cmInstr.h **** 
 492:libraries/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 493:libraries/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 494:libraries/CMSIS/include/core_cmInstr.h ****  */
 495:libraries/CMSIS/include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 105              		.loc 2 495 57 is_stmt 1 view .LVU28
 106              	.LBB15:
 496:libraries/CMSIS/include/core_cmInstr.h **** {
 497:libraries/CMSIS/include/core_cmInstr.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 498:libraries/CMSIS/include/core_cmInstr.h ****   return __builtin_bswap32(value);
 107              		.loc 2 498 3 view .LVU29
 108              		.loc 2 498 10 is_stmt 0 view .LVU30
 109 0034 1BBA     		rev	r3, r3
 110              	.LVL9:
 111              		.loc 2 498 10 view .LVU31
 112              	.LBE15:
 113              	.LBE14:
 114              		.loc 1 123 43 discriminator 1 view .LVU32
 115 0036 0493     		str	r3, [sp, #16]
 124:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   keyaddr+=4;
 116              		.loc 1 124 3 is_stmt 1 view .LVU33
 117              	.LVL10:
 125:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 118              		.loc 1 125 3 view .LVU34
 119              		.loc 1 125 45 is_stmt 0 view .LVU35
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 14


 120 0038 6B68     		ldr	r3, [r5, #4]
 121              	.LVL11:
 122              	.LBB16:
 123              	.LBI16:
 495:libraries/CMSIS/include/core_cmInstr.h **** {
 124              		.loc 2 495 57 is_stmt 1 view .LVU36
 125              	.LBB17:
 126              		.loc 2 498 3 view .LVU37
 127              		.loc 2 498 10 is_stmt 0 view .LVU38
 128 003a 1BBA     		rev	r3, r3
 129              	.LVL12:
 130              		.loc 2 498 10 view .LVU39
 131              	.LBE17:
 132              	.LBE16:
 133              		.loc 1 125 43 discriminator 1 view .LVU40
 134 003c 0593     		str	r3, [sp, #20]
 126:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyInit(& DES_CRYP_KeyInitStructure);
 135              		.loc 1 126 3 is_stmt 1 view .LVU41
 136 003e 02A8     		add	r0, sp, #8
 137 0040 FFF7FEFF 		bl	CRYP_KeyInit
 138              	.LVL13:
 127:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 128:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Flush IN/OUT FIFO */
 129:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_FIFOFlush();
 139              		.loc 1 129 3 view .LVU42
 140 0044 FFF7FEFF 		bl	CRYP_FIFOFlush
 141              	.LVL14:
 130:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 131:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Enable Crypto processor */
 132:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Cmd(ENABLE);
 142              		.loc 1 132 3 view .LVU43
 143 0048 0120     		movs	r0, #1
 144 004a FFF7FEFF 		bl	CRYP_Cmd
 145              	.LVL15:
 133:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 134:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   if(CRYP_GetCmdStatus() == DISABLE)
 146              		.loc 1 134 3 view .LVU44
 147              		.loc 1 134 6 is_stmt 0 view .LVU45
 148 004e FFF7FEFF 		bl	CRYP_GetCmdStatus
 149              	.LVL16:
 150              		.loc 1 134 5 discriminator 1 view .LVU46
 151 0052 0646     		mov	r6, r0
 152              	.LVL17:
 153              		.loc 1 134 5 discriminator 1 view .LVU47
 154 0054 78B3     		cbz	r0, .L4
 135:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 136:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     /* The CRYP peripheral clock is not enabled or the device doesn't embed 
 137:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     the CRYP peripheral (please check the device sales type. */
 138:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     status = ERROR;
 139:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 140:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   else
 141:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 142:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     for(i=0; ((i<Ilength) && (status != ERROR)); i+=8)
 155              		.loc 1 142 10 view .LVU48
 156 0056 0025     		movs	r5, #0
 157              	.LVL18:
  99:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t keyaddr    = (uint32_t)Key;
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 15


 158              		.loc 1 99 15 view .LVU49
 159 0058 0126     		movs	r6, #1
 160 005a 05E0     		b	.L5
 161              	.LVL19:
 162              	.L13:
 111:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 163              		.loc 1 111 6 is_stmt 1 view .LVU50
 111:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 164              		.loc 1 111 43 is_stmt 0 view .LVU51
 165 005c 0023     		movs	r3, #0
 166 005e 0A93     		str	r3, [sp, #40]
 167 0060 E0E7     		b	.L3
 168              	.LVL20:
 169              	.L6:
 143:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 144:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       
 145:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       /* Write the Input block in the Input FIFO */
 146:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       CRYP_DataIn(*(uint32_t*)(inputaddr));
 147:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       inputaddr+=4;
 148:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       CRYP_DataIn(*(uint32_t*)(inputaddr));
 149:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       inputaddr+=4;
 150:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       
 151:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       /* Wait until the complete message has been processed */
 152:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       counter = 0;
 153:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       do
 154:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       {
 155:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 156:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         counter++;
 157:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 158:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       
 159:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       if (busystatus != RESET)
 170              		.loc 1 159 7 is_stmt 1 view .LVU52
 171              		.loc 1 159 10 is_stmt 0 view .LVU53
 172 0062 D0B1     		cbz	r0, .L14
 160:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       {
 161:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         status = ERROR;
 173              		.loc 1 161 16 view .LVU54
 174 0064 0026     		movs	r6, #0
 175              	.LVL21:
 176              	.L8:
 142:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 177              		.loc 1 142 51 is_stmt 1 discriminator 2 view .LVU55
 178 0066 0835     		adds	r5, r5, #8
 179              	.LVL22:
 180              	.L5:
 142:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 181              		.loc 1 142 27 discriminator 1 view .LVU56
 182 0068 BD42     		cmp	r5, r7
 183 006a 21D2     		bcs	.L9
 142:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 184              		.loc 1 142 27 is_stmt 0 discriminator 3 view .LVU57
 185 006c 06B3     		cbz	r6, .L9
 146:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       inputaddr+=4;
 186              		.loc 1 146 7 is_stmt 1 view .LVU58
 187 006e 2068     		ldr	r0, [r4]
 188 0070 FFF7FEFF 		bl	CRYP_DataIn
 189              	.LVL23:
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 16


 147:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       CRYP_DataIn(*(uint32_t*)(inputaddr));
 190              		.loc 1 147 7 view .LVU59
 148:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       inputaddr+=4;
 191              		.loc 1 148 7 view .LVU60
 192 0074 6068     		ldr	r0, [r4, #4]
 193 0076 FFF7FEFF 		bl	CRYP_DataIn
 194              	.LVL24:
 149:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       
 195              		.loc 1 149 7 view .LVU61
 149:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       
 196              		.loc 1 149 16 is_stmt 0 view .LVU62
 197 007a 0834     		adds	r4, r4, #8
 198              	.LVL25:
 152:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       do
 199              		.loc 1 152 7 is_stmt 1 view .LVU63
 152:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       do
 200              		.loc 1 152 15 is_stmt 0 view .LVU64
 201 007c 0023     		movs	r3, #0
 202 007e 0193     		str	r3, [sp, #4]
 203              	.L7:
 153:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       {
 204              		.loc 1 153 7 is_stmt 1 view .LVU65
 155:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         counter++;
 205              		.loc 1 155 9 view .LVU66
 155:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         counter++;
 206              		.loc 1 155 22 is_stmt 0 view .LVU67
 207 0080 1020     		movs	r0, #16
 208 0082 FFF7FEFF 		bl	CRYP_GetFlagStatus
 209              	.LVL26:
 156:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 210              		.loc 1 156 9 is_stmt 1 view .LVU68
 156:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 211              		.loc 1 156 16 is_stmt 0 view .LVU69
 212 0086 0199     		ldr	r1, [sp, #4]
 213 0088 0131     		adds	r1, r1, #1
 214 008a 0191     		str	r1, [sp, #4]
 157:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       
 215              		.loc 1 157 44 is_stmt 1 discriminator 2 view .LVU70
 157:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       
 216              		.loc 1 157 24 is_stmt 0 discriminator 2 view .LVU71
 217 008c 019B     		ldr	r3, [sp, #4]
 157:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       
 218              		.loc 1 157 44 discriminator 2 view .LVU72
 219 008e B3F5803F 		cmp	r3, #65536
 220 0092 E6D0     		beq	.L6
 157:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       
 221              		.loc 1 157 44 discriminator 1 view .LVU73
 222 0094 0028     		cmp	r0, #0
 223 0096 F3D1     		bne	.L7
 224 0098 E3E7     		b	.L6
 225              	.L14:
 162:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       }
 163:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       else
 164:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       {
 165:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         
 166:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         /* Read the Output block from the Output FIFO */
 167:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         *(uint32_t*)(outputaddr) = CRYP_DataOut();
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 17


 226              		.loc 1 167 9 is_stmt 1 view .LVU74
 227              		.loc 1 167 36 is_stmt 0 view .LVU75
 228 009a FFF7FEFF 		bl	CRYP_DataOut
 229              	.LVL27:
 230              		.loc 1 167 34 discriminator 1 view .LVU76
 231 009e C8F80000 		str	r0, [r8]
 168:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         outputaddr+=4;
 232              		.loc 1 168 9 is_stmt 1 view .LVU77
 233              	.LVL28:
 169:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         *(uint32_t*)(outputaddr) = CRYP_DataOut();
 234              		.loc 1 169 9 view .LVU78
 235              		.loc 1 169 36 is_stmt 0 view .LVU79
 236 00a2 FFF7FEFF 		bl	CRYP_DataOut
 237              	.LVL29:
 238              		.loc 1 169 34 discriminator 1 view .LVU80
 239 00a6 C8F80400 		str	r0, [r8, #4]
 170:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         outputaddr+=4;
 240              		.loc 1 170 9 is_stmt 1 view .LVU81
 241              		.loc 1 170 19 is_stmt 0 view .LVU82
 242 00aa 08F10808 		add	r8, r8, #8
 243              	.LVL30:
 244              		.loc 1 170 19 view .LVU83
 245 00ae DAE7     		b	.L8
 246              	.LVL31:
 247              	.L9:
 171:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       }
 172:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }
 173:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     
 174:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     /* Disable Crypto */
 175:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_Cmd(DISABLE);
 248              		.loc 1 175 5 is_stmt 1 view .LVU84
 249 00b0 0020     		movs	r0, #0
 250 00b2 FFF7FEFF 		bl	CRYP_Cmd
 251              	.LVL32:
 252              	.L4:
 176:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 177:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   return status; 
 253              		.loc 1 177 3 view .LVU85
 178:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** }
 254              		.loc 1 178 1 is_stmt 0 view .LVU86
 255 00b6 3046     		mov	r0, r6
 256 00b8 0EB0     		add	sp, sp, #56
 257              	.LCFI2:
 258              		.cfi_def_cfa_offset 24
 259              		@ sp needed
 260 00ba BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 261              		.loc 1 178 1 view .LVU87
 262              		.cfi_endproc
 263              	.LFE123:
 265              		.section	.text.CRYP_DES_CBC,"ax",%progbits
 266              		.align	1
 267              		.global	CRYP_DES_CBC
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 272              	CRYP_DES_CBC:
 273              	.LVL33:
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 18


 274              	.LFB124:
 179:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 180:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /**
 181:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @brief  Encrypt and decrypt using DES in CBC Mode
 182:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Mode: encryption or decryption Mode.
 183:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          This parameter can be one of the following values:
 184:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            @arg MODE_ENCRYPT: Encryption
 185:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            @arg MODE_DECRYPT: Decryption
 186:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Key: Key used for DES algorithm.
 187:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  InitVectors: Initialisation Vectors used for DES algorithm.
 188:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 8.
 189:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Input: pointer to the Input buffer.
 190:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Output: pointer to the returned buffer.
 191:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @retval An ErrorStatus enumeration value:
 192:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          - SUCCESS: Operation done
 193:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          - ERROR: Operation failed
 194:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
 195:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** ErrorStatus CRYP_DES_CBC(uint8_t Mode, uint8_t Key[8], uint8_t InitVectors[8],
 196:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****                          uint8_t *Input, uint32_t Ilength, uint8_t *Output)
 197:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** {
 275              		.loc 1 197 1 is_stmt 1 view -0
 276              		.cfi_startproc
 277              		@ args = 8, pretend = 0, frame = 72
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279              		.loc 1 197 1 is_stmt 0 view .LVU89
 280 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 281              	.LCFI3:
 282              		.cfi_def_cfa_offset 28
 283              		.cfi_offset 4, -28
 284              		.cfi_offset 5, -24
 285              		.cfi_offset 6, -20
 286              		.cfi_offset 7, -16
 287              		.cfi_offset 8, -12
 288              		.cfi_offset 9, -8
 289              		.cfi_offset 14, -4
 290 0004 93B0     		sub	sp, sp, #76
 291              	.LCFI4:
 292              		.cfi_def_cfa_offset 104
 293 0006 8146     		mov	r9, r0
 294 0008 0E46     		mov	r6, r1
 295 000a 1546     		mov	r5, r2
 296 000c DDF86880 		ldr	r8, [sp, #104]
 198:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_InitTypeDef DES_CRYP_InitStructure;
 297              		.loc 1 198 3 is_stmt 1 view .LVU90
 199:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyInitTypeDef DES_CRYP_KeyInitStructure;
 298              		.loc 1 199 3 view .LVU91
 200:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_IVInitTypeDef DES_CRYP_IVInitStructure;
 299              		.loc 1 200 3 view .LVU92
 201:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   __IO uint32_t counter = 0;
 300              		.loc 1 201 3 view .LVU93
 301              		.loc 1 201 17 is_stmt 0 view .LVU94
 302 0010 0022     		movs	r2, #0
 303              	.LVL34:
 304              		.loc 1 201 17 view .LVU95
 305 0012 0192     		str	r2, [sp, #4]
 202:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t busystatus = 0;
 306              		.loc 1 202 3 is_stmt 1 view .LVU96
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 19


 307              	.LVL35:
 203:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ErrorStatus status = SUCCESS;
 308              		.loc 1 203 3 view .LVU97
 204:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t keyaddr    = (uint32_t)Key;
 309              		.loc 1 204 3 view .LVU98
 205:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t inputaddr  = (uint32_t)Input;
 310              		.loc 1 205 3 view .LVU99
 311              		.loc 1 205 12 is_stmt 0 view .LVU100
 312 0014 1C46     		mov	r4, r3
 313              	.LVL36:
 206:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t outputaddr = (uint32_t)Output;
 314              		.loc 1 206 3 is_stmt 1 view .LVU101
 315              		.loc 1 206 12 is_stmt 0 view .LVU102
 316 0016 1B9F     		ldr	r7, [sp, #108]
 317              	.LVL37:
 207:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t ivaddr     = (uint32_t)InitVectors;
 318              		.loc 1 207 3 is_stmt 1 view .LVU103
 208:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t i = 0;
 319              		.loc 1 208 3 view .LVU104
 209:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 210:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Crypto structures initialisation*/
 211:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyStructInit(&DES_CRYP_KeyInitStructure);
 320              		.loc 1 211 3 view .LVU105
 321 0018 06A8     		add	r0, sp, #24
 322              	.LVL38:
 323              		.loc 1 211 3 is_stmt 0 view .LVU106
 324 001a FFF7FEFF 		bl	CRYP_KeyStructInit
 325              	.LVL39:
 212:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 213:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Crypto Init for Encryption process */
 214:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   if(Mode == MODE_ENCRYPT) /* DES encryption */
 326              		.loc 1 214 3 is_stmt 1 view .LVU107
 327              		.loc 1 214 5 is_stmt 0 view .LVU108
 328 001e B9F1010F 		cmp	r9, #1
 329 0022 26D0     		beq	.L27
 215:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 216:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****      DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 217:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 218:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   else /*if(Mode == MODE_DECRYPT)*/ /* DES decryption */
 219:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 220:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****      DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Decrypt;
 330              		.loc 1 220 6 is_stmt 1 view .LVU109
 331              		.loc 1 220 43 is_stmt 0 view .LVU110
 332 0024 0423     		movs	r3, #4
 333 0026 0E93     		str	r3, [sp, #56]
 334              	.L17:
 221:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 222:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 223:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_DES_CBC;
 335              		.loc 1 223 3 is_stmt 1 view .LVU111
 336              		.loc 1 223 40 is_stmt 0 view .LVU112
 337 0028 1823     		movs	r3, #24
 338 002a 0F93     		str	r3, [sp, #60]
 224:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 339              		.loc 1 224 3 is_stmt 1 view .LVU113
 340              		.loc 1 224 40 is_stmt 0 view .LVU114
 341 002c 8023     		movs	r3, #128
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 20


 342 002e 1093     		str	r3, [sp, #64]
 225:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Init(&DES_CRYP_InitStructure);
 343              		.loc 1 225 3 is_stmt 1 view .LVU115
 344 0030 0EA8     		add	r0, sp, #56
 345 0032 FFF7FEFF 		bl	CRYP_Init
 346              	.LVL40:
 226:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 227:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Key Initialisation */
 228:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 347              		.loc 1 228 3 view .LVU116
 348              		.loc 1 228 45 is_stmt 0 view .LVU117
 349 0036 3368     		ldr	r3, [r6]
 350              	.LVL41:
 351              	.LBB18:
 352              	.LBI18:
 495:libraries/CMSIS/include/core_cmInstr.h **** {
 353              		.loc 2 495 57 is_stmt 1 view .LVU118
 354              	.LBB19:
 355              		.loc 2 498 3 view .LVU119
 356              		.loc 2 498 10 is_stmt 0 view .LVU120
 357 0038 1BBA     		rev	r3, r3
 358              	.LVL42:
 359              		.loc 2 498 10 view .LVU121
 360              	.LBE19:
 361              	.LBE18:
 362              		.loc 1 228 43 discriminator 1 view .LVU122
 363 003a 0893     		str	r3, [sp, #32]
 229:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   keyaddr+=4;
 364              		.loc 1 229 3 is_stmt 1 view .LVU123
 365              	.LVL43:
 230:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 366              		.loc 1 230 3 view .LVU124
 367              		.loc 1 230 45 is_stmt 0 view .LVU125
 368 003c 7368     		ldr	r3, [r6, #4]
 369              	.LVL44:
 370              	.LBB20:
 371              	.LBI20:
 495:libraries/CMSIS/include/core_cmInstr.h **** {
 372              		.loc 2 495 57 is_stmt 1 view .LVU126
 373              	.LBB21:
 374              		.loc 2 498 3 view .LVU127
 375              		.loc 2 498 10 is_stmt 0 view .LVU128
 376 003e 1BBA     		rev	r3, r3
 377              	.LVL45:
 378              		.loc 2 498 10 view .LVU129
 379              	.LBE21:
 380              	.LBE20:
 381              		.loc 1 230 43 discriminator 1 view .LVU130
 382 0040 0993     		str	r3, [sp, #36]
 231:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyInit(& DES_CRYP_KeyInitStructure);
 383              		.loc 1 231 3 is_stmt 1 view .LVU131
 384 0042 06A8     		add	r0, sp, #24
 385 0044 FFF7FEFF 		bl	CRYP_KeyInit
 386              	.LVL46:
 232:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 233:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Initialization Vectors */
 234:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 21


 387              		.loc 1 234 3 view .LVU132
 388              		.loc 1 234 43 is_stmt 0 view .LVU133
 389 0048 2B68     		ldr	r3, [r5]
 390              	.LVL47:
 391              	.LBB22:
 392              	.LBI22:
 495:libraries/CMSIS/include/core_cmInstr.h **** {
 393              		.loc 2 495 57 is_stmt 1 view .LVU134
 394              	.LBB23:
 395              		.loc 2 498 3 view .LVU135
 396              		.loc 2 498 10 is_stmt 0 view .LVU136
 397 004a 1BBA     		rev	r3, r3
 398              	.LVL48:
 399              		.loc 2 498 10 view .LVU137
 400              	.LBE23:
 401              	.LBE22:
 402              		.loc 1 234 41 discriminator 1 view .LVU138
 403 004c 0293     		str	r3, [sp, #8]
 235:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ivaddr+=4;
 404              		.loc 1 235 3 is_stmt 1 view .LVU139
 405              	.LVL49:
 236:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 406              		.loc 1 236 3 view .LVU140
 407              		.loc 1 236 43 is_stmt 0 view .LVU141
 408 004e 6B68     		ldr	r3, [r5, #4]
 409              	.LVL50:
 410              	.LBB24:
 411              	.LBI24:
 495:libraries/CMSIS/include/core_cmInstr.h **** {
 412              		.loc 2 495 57 is_stmt 1 view .LVU142
 413              	.LBB25:
 414              		.loc 2 498 3 view .LVU143
 415              		.loc 2 498 10 is_stmt 0 view .LVU144
 416 0050 1BBA     		rev	r3, r3
 417              	.LVL51:
 418              		.loc 2 498 10 view .LVU145
 419              	.LBE25:
 420              	.LBE24:
 421              		.loc 1 236 41 discriminator 1 view .LVU146
 422 0052 0393     		str	r3, [sp, #12]
 237:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_IVInit(&DES_CRYP_IVInitStructure);
 423              		.loc 1 237 3 is_stmt 1 view .LVU147
 424 0054 02A8     		add	r0, sp, #8
 425 0056 FFF7FEFF 		bl	CRYP_IVInit
 426              	.LVL52:
 238:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 239:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Flush IN/OUT FIFO */
 240:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_FIFOFlush();
 427              		.loc 1 240 3 view .LVU148
 428 005a FFF7FEFF 		bl	CRYP_FIFOFlush
 429              	.LVL53:
 241:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   
 242:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Enable Crypto processor */
 243:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Cmd(ENABLE);
 430              		.loc 1 243 3 view .LVU149
 431 005e 0120     		movs	r0, #1
 432 0060 FFF7FEFF 		bl	CRYP_Cmd
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 22


 433              	.LVL54:
 244:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 245:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   if(CRYP_GetCmdStatus() == DISABLE)
 434              		.loc 1 245 3 view .LVU150
 435              		.loc 1 245 6 is_stmt 0 view .LVU151
 436 0064 FFF7FEFF 		bl	CRYP_GetCmdStatus
 437              	.LVL55:
 438              		.loc 1 245 5 discriminator 1 view .LVU152
 439 0068 0646     		mov	r6, r0
 440              	.LVL56:
 441              		.loc 1 245 5 discriminator 1 view .LVU153
 442 006a 60B3     		cbz	r0, .L18
 246:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 247:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     /* The CRYP peripheral clock is not enabled or the device doesn't embed 
 248:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     the CRYP peripheral (please check the device sales type. */
 249:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     status = ERROR;
 250:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 251:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   else
 252:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 253:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     for(i=0; ((i<Ilength) && (status != ERROR)); i+=8)
 443              		.loc 1 253 10 view .LVU154
 444 006c 0025     		movs	r5, #0
 445              	.LVL57:
 203:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t keyaddr    = (uint32_t)Key;
 446              		.loc 1 203 15 view .LVU155
 447 006e 0126     		movs	r6, #1
 448 0070 05E0     		b	.L19
 449              	.LVL58:
 450              	.L27:
 216:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 451              		.loc 1 216 6 is_stmt 1 view .LVU156
 216:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 452              		.loc 1 216 43 is_stmt 0 view .LVU157
 453 0072 0023     		movs	r3, #0
 454 0074 0E93     		str	r3, [sp, #56]
 455 0076 D7E7     		b	.L17
 456              	.LVL59:
 457              	.L20:
 254:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 255:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       /* Write the Input block in the Input FIFO */
 256:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       CRYP_DataIn(*(uint32_t*)(inputaddr));
 257:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       inputaddr+=4;
 258:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       CRYP_DataIn(*(uint32_t*)(inputaddr));
 259:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       inputaddr+=4;
 260:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       
 261:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       /* Wait until the complete message has been processed */
 262:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       counter = 0;
 263:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       do
 264:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       {
 265:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 266:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         counter++;
 267:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 268:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       
 269:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       if (busystatus != RESET)
 458              		.loc 1 269 7 is_stmt 1 view .LVU158
 459              		.loc 1 269 10 is_stmt 0 view .LVU159
 460 0078 D0B1     		cbz	r0, .L28
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 23


 270:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       {
 271:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         status = ERROR;
 461              		.loc 1 271 16 view .LVU160
 462 007a 0026     		movs	r6, #0
 463              	.LVL60:
 464              	.L22:
 253:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 465              		.loc 1 253 51 is_stmt 1 discriminator 2 view .LVU161
 466 007c 0835     		adds	r5, r5, #8
 467              	.LVL61:
 468              	.L19:
 253:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 469              		.loc 1 253 27 discriminator 1 view .LVU162
 470 007e 4545     		cmp	r5, r8
 471 0080 1ED2     		bcs	.L23
 253:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 472              		.loc 1 253 27 is_stmt 0 discriminator 3 view .LVU163
 473 0082 EEB1     		cbz	r6, .L23
 256:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       inputaddr+=4;
 474              		.loc 1 256 7 is_stmt 1 view .LVU164
 475 0084 2068     		ldr	r0, [r4]
 476 0086 FFF7FEFF 		bl	CRYP_DataIn
 477              	.LVL62:
 257:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       CRYP_DataIn(*(uint32_t*)(inputaddr));
 478              		.loc 1 257 7 view .LVU165
 258:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       inputaddr+=4;
 479              		.loc 1 258 7 view .LVU166
 480 008a 6068     		ldr	r0, [r4, #4]
 481 008c FFF7FEFF 		bl	CRYP_DataIn
 482              	.LVL63:
 259:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       
 483              		.loc 1 259 7 view .LVU167
 259:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       
 484              		.loc 1 259 16 is_stmt 0 view .LVU168
 485 0090 0834     		adds	r4, r4, #8
 486              	.LVL64:
 262:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       do
 487              		.loc 1 262 7 is_stmt 1 view .LVU169
 262:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       do
 488              		.loc 1 262 15 is_stmt 0 view .LVU170
 489 0092 0023     		movs	r3, #0
 490 0094 0193     		str	r3, [sp, #4]
 491              	.L21:
 263:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       {
 492              		.loc 1 263 7 is_stmt 1 view .LVU171
 265:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         counter++;
 493              		.loc 1 265 9 view .LVU172
 265:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         counter++;
 494              		.loc 1 265 22 is_stmt 0 view .LVU173
 495 0096 1020     		movs	r0, #16
 496 0098 FFF7FEFF 		bl	CRYP_GetFlagStatus
 497              	.LVL65:
 266:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 498              		.loc 1 266 9 is_stmt 1 view .LVU174
 266:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 499              		.loc 1 266 16 is_stmt 0 view .LVU175
 500 009c 019A     		ldr	r2, [sp, #4]
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 24


 501 009e 0132     		adds	r2, r2, #1
 502 00a0 0192     		str	r2, [sp, #4]
 267:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       
 503              		.loc 1 267 44 is_stmt 1 discriminator 2 view .LVU176
 267:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       
 504              		.loc 1 267 24 is_stmt 0 discriminator 2 view .LVU177
 505 00a2 019B     		ldr	r3, [sp, #4]
 267:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       
 506              		.loc 1 267 44 discriminator 2 view .LVU178
 507 00a4 B3F5803F 		cmp	r3, #65536
 508 00a8 E6D0     		beq	.L20
 267:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       
 509              		.loc 1 267 44 discriminator 1 view .LVU179
 510 00aa 0028     		cmp	r0, #0
 511 00ac F3D1     		bne	.L21
 512 00ae E3E7     		b	.L20
 513              	.L28:
 272:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       }
 273:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       else
 274:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       {
 275:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         /* Read the Output block from the Output FIFO */
 276:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         *(uint32_t*)(outputaddr) = CRYP_DataOut();
 514              		.loc 1 276 9 is_stmt 1 view .LVU180
 515              		.loc 1 276 36 is_stmt 0 view .LVU181
 516 00b0 FFF7FEFF 		bl	CRYP_DataOut
 517              	.LVL66:
 518              		.loc 1 276 34 discriminator 1 view .LVU182
 519 00b4 3860     		str	r0, [r7]
 277:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         outputaddr+=4;
 520              		.loc 1 277 9 is_stmt 1 view .LVU183
 521              	.LVL67:
 278:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         *(uint32_t*)(outputaddr) = CRYP_DataOut();
 522              		.loc 1 278 9 view .LVU184
 523              		.loc 1 278 36 is_stmt 0 view .LVU185
 524 00b6 FFF7FEFF 		bl	CRYP_DataOut
 525              	.LVL68:
 526              		.loc 1 278 34 discriminator 1 view .LVU186
 527 00ba 7860     		str	r0, [r7, #4]
 279:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****         outputaddr+=4;
 528              		.loc 1 279 9 is_stmt 1 view .LVU187
 529              		.loc 1 279 19 is_stmt 0 view .LVU188
 530 00bc 0837     		adds	r7, r7, #8
 531              	.LVL69:
 532              		.loc 1 279 19 view .LVU189
 533 00be DDE7     		b	.L22
 534              	.LVL70:
 535              	.L23:
 280:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       }
 281:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }
 282:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     
 283:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     /* Disable Crypto */
 284:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_Cmd(DISABLE);
 536              		.loc 1 284 5 is_stmt 1 view .LVU190
 537 00c0 0020     		movs	r0, #0
 538 00c2 FFF7FEFF 		bl	CRYP_Cmd
 539              	.LVL71:
 540              	.L18:
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 25


 285:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 286:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   return status; 
 541              		.loc 1 286 3 view .LVU191
 287:libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** }
 542              		.loc 1 287 1 is_stmt 0 view .LVU192
 543 00c6 3046     		mov	r0, r6
 544 00c8 13B0     		add	sp, sp, #76
 545              	.LCFI5:
 546              		.cfi_def_cfa_offset 28
 547              		@ sp needed
 548 00ca BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 549              		.loc 1 287 1 view .LVU193
 550              		.cfi_endproc
 551              	.LFE124:
 553              		.text
 554              	.Letext0:
 555              		.file 3 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/13.3 rel1/arm-none-eabi/include/ma
 556              		.file 4 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/13.3 rel1/arm-none-eabi/include/sy
 557              		.file 5 "libraries/CMSIS/Device/ST/STM32F4xx/include/stm32f4xx.h"
 558              		.file 6 "libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h"
ARM GAS  C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s 			page 26


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_cryp_des.c
C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s:21     .text.CRYP_DES_ECB:00000000 $t
C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s:27     .text.CRYP_DES_ECB:00000000 CRYP_DES_ECB
C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s:266    .text.CRYP_DES_CBC:00000000 $t
C:\Users\ktkuru\AppData\Local\Temp\ccGSBYss.s:272    .text.CRYP_DES_CBC:00000000 CRYP_DES_CBC

UNDEFINED SYMBOLS
CRYP_KeyStructInit
CRYP_Init
CRYP_KeyInit
CRYP_FIFOFlush
CRYP_Cmd
CRYP_GetCmdStatus
CRYP_DataIn
CRYP_GetFlagStatus
CRYP_DataOut
CRYP_IVInit
