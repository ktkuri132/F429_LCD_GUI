ARM GAS  /tmp/ccg34dqb.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"touch.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.tp_write_byte,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	tp_write_byte:
  26              	.LVL0:
  27              	.LFB126:
  28              		.file 1 "HADRWARE/TOUCH/touch.c"
   1:HADRWARE/TOUCH/touch.c **** /**
   2:HADRWARE/TOUCH/touch.c ****  **************************************************************************************************
   3:HADRWARE/TOUCH/touch.c ****  * @file        touch.c
   4:HADRWARE/TOUCH/touch.c ****  * @author      正点原子团队(ALIENTEK)
   5:HADRWARE/TOUCH/touch.c ****  * @version     V1.1
   6:HADRWARE/TOUCH/touch.c ****  * @date        2022-12-27
   7:HADRWARE/TOUCH/touch.c ****  * @brief       触摸屏 驱动代码
   8:HADRWARE/TOUCH/touch.c ****  * @note        支持电阻/电容式触摸屏
   9:HADRWARE/TOUCH/touch.c ****  *              触摸屏驱动（支持ADS7843/7846/UH7843/7846/XPT2046/TSC2046/GT9147/GT9271/FT5206/GT115
  10:HADRWARE/TOUCH/touch.c ****  *
  11:HADRWARE/TOUCH/touch.c ****  * @license     Copyright (c) 2022-2032, 广州市星翼电子科技有限公司
  12:HADRWARE/TOUCH/touch.c ****  **************************************************************************************************
  13:HADRWARE/TOUCH/touch.c ****  * @attention
  14:HADRWARE/TOUCH/touch.c ****  *
  15:HADRWARE/TOUCH/touch.c ****  * 实验平台:正点原子 阿波罗 F429开发板
  16:HADRWARE/TOUCH/touch.c ****  * 在线视频:www.yuanzige.com
  17:HADRWARE/TOUCH/touch.c ****  * 技术论坛:www.openedv.com
  18:HADRWARE/TOUCH/touch.c ****  * 公司网址:www.alientek.com
  19:HADRWARE/TOUCH/touch.c ****  * 购买地址:openedv.taobao.com
  20:HADRWARE/TOUCH/touch.c ****  *
  21:HADRWARE/TOUCH/touch.c ****  * 修改说明
  22:HADRWARE/TOUCH/touch.c ****  * V1.0 20221227
  23:HADRWARE/TOUCH/touch.c ****  * 第一次发布
  24:HADRWARE/TOUCH/touch.c ****  * V1.1 20230607
  25:HADRWARE/TOUCH/touch.c ****  * 1，新增对ST7796 3.5寸屏 GT1151的支持
  26:HADRWARE/TOUCH/touch.c ****  * 2，新增对ILI9806 4.3寸屏 GT1151的支持
  27:HADRWARE/TOUCH/touch.c ****  *
  28:HADRWARE/TOUCH/touch.c ****  **************************************************************************************************
  29:HADRWARE/TOUCH/touch.c ****  */
  30:HADRWARE/TOUCH/touch.c **** 
ARM GAS  /tmp/ccg34dqb.s 			page 2


  31:HADRWARE/TOUCH/touch.c **** #include "stdio.h"
  32:HADRWARE/TOUCH/touch.c **** #include "stdlib.h"
  33:HADRWARE/TOUCH/touch.c **** #include "lcd.h"
  34:HADRWARE/TOUCH/touch.c **** #include "touch.h"
  35:HADRWARE/TOUCH/touch.c **** //#include "24cxx.h"
  36:HADRWARE/TOUCH/touch.c **** #include "delay.h"
  37:HADRWARE/TOUCH/touch.c **** 
  38:HADRWARE/TOUCH/touch.c **** 
  39:HADRWARE/TOUCH/touch.c **** _m_tp_dev tp_dev =
  40:HADRWARE/TOUCH/touch.c **** {
  41:HADRWARE/TOUCH/touch.c ****     tp_init,
  42:HADRWARE/TOUCH/touch.c ****     tp_scan,
  43:HADRWARE/TOUCH/touch.c ****     //tp_adjust,
  44:HADRWARE/TOUCH/touch.c ****     0,
  45:HADRWARE/TOUCH/touch.c ****     0,
  46:HADRWARE/TOUCH/touch.c ****     0,
  47:HADRWARE/TOUCH/touch.c ****     0,
  48:HADRWARE/TOUCH/touch.c ****     0,
  49:HADRWARE/TOUCH/touch.c ****     0,
  50:HADRWARE/TOUCH/touch.c ****     0,
  51:HADRWARE/TOUCH/touch.c ****     0,
  52:HADRWARE/TOUCH/touch.c **** };
  53:HADRWARE/TOUCH/touch.c **** 
  54:HADRWARE/TOUCH/touch.c **** 
  55:HADRWARE/TOUCH/touch.c **** 
  56:HADRWARE/TOUCH/touch.c **** /**
  57:HADRWARE/TOUCH/touch.c ****  * @brief       SPI写数据
  58:HADRWARE/TOUCH/touch.c ****  * @note        向触摸屏IC写入1 byte数据
  59:HADRWARE/TOUCH/touch.c ****  * @param       data: 要写入的数据
  60:HADRWARE/TOUCH/touch.c ****  * @retval      无
  61:HADRWARE/TOUCH/touch.c ****  */
  62:HADRWARE/TOUCH/touch.c **** static void tp_write_byte(uint8_t data)
  63:HADRWARE/TOUCH/touch.c **** {
  29              		.loc 1 63 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 63 1 is_stmt 0 view .LVU1
  34 0000 70B5     		push	{r4, r5, r6, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 4, -16
  38              		.cfi_offset 5, -12
  39              		.cfi_offset 6, -8
  40              		.cfi_offset 14, -4
  41 0002 0446     		mov	r4, r0
  64:HADRWARE/TOUCH/touch.c ****     uint8_t count = 0;
  42              		.loc 1 64 5 is_stmt 1 view .LVU2
  43              	.LVL1:
  65:HADRWARE/TOUCH/touch.c **** 
  66:HADRWARE/TOUCH/touch.c ****     for (count = 0; count < 8; count++)
  44              		.loc 1 66 5 view .LVU3
  45              		.loc 1 66 16 is_stmt 0 view .LVU4
  46 0004 0025     		movs	r5, #0
  47              		.loc 1 66 5 view .LVU5
  48 0006 16E0     		b	.L2
  49              	.LVL2:
ARM GAS  /tmp/ccg34dqb.s 			page 3


  50              	.L3:
  67:HADRWARE/TOUCH/touch.c ****     {
  68:HADRWARE/TOUCH/touch.c ****         if (data & 0x80)    /* 发送1 */
  69:HADRWARE/TOUCH/touch.c ****         {
  70:HADRWARE/TOUCH/touch.c ****             T_MOSI(1);
  71:HADRWARE/TOUCH/touch.c ****         }
  72:HADRWARE/TOUCH/touch.c ****         else                /* 发送0 */
  73:HADRWARE/TOUCH/touch.c ****         {
  74:HADRWARE/TOUCH/touch.c ****             T_MOSI(0);
  51              		.loc 1 74 13 is_stmt 1 view .LVU6
  52 0008 0022     		movs	r2, #0
  53 000a 0821     		movs	r1, #8
  54 000c 1048     		ldr	r0, .L8
  55 000e FFF7FEFF 		bl	sys_gpio_pin_set
  56              	.LVL3:
  57              	.L4:
  75:HADRWARE/TOUCH/touch.c ****         }
  76:HADRWARE/TOUCH/touch.c **** 
  77:HADRWARE/TOUCH/touch.c ****         data <<= 1;
  58              		.loc 1 77 9 discriminator 2 view .LVU7
  59              		.loc 1 77 14 is_stmt 0 discriminator 2 view .LVU8
  60 0012 6400     		lsls	r4, r4, #1
  61              	.LVL4:
  62              		.loc 1 77 14 discriminator 2 view .LVU9
  63 0014 E4B2     		uxtb	r4, r4
  64              	.LVL5:
  78:HADRWARE/TOUCH/touch.c ****         T_CLK(0);
  65              		.loc 1 78 9 is_stmt 1 discriminator 2 view .LVU10
  66 0016 0F4E     		ldr	r6, .L8+4
  67 0018 0022     		movs	r2, #0
  68 001a 4021     		movs	r1, #64
  69 001c 3046     		mov	r0, r6
  70 001e FFF7FEFF 		bl	sys_gpio_pin_set
  71              	.LVL6:
  79:HADRWARE/TOUCH/touch.c ****         delay_us(1);
  72              		.loc 1 79 9 discriminator 2 view .LVU11
  73 0022 0120     		movs	r0, #1
  74 0024 FFF7FEFF 		bl	delay_us
  75              	.LVL7:
  80:HADRWARE/TOUCH/touch.c ****         T_CLK(1);           /* 上升沿有效 */
  76              		.loc 1 80 9 discriminator 2 view .LVU12
  77 0028 0122     		movs	r2, #1
  78 002a 4021     		movs	r1, #64
  79 002c 3046     		mov	r0, r6
  80 002e FFF7FEFF 		bl	sys_gpio_pin_set
  81              	.LVL8:
  66:HADRWARE/TOUCH/touch.c ****     {
  82              		.loc 1 66 32 discriminator 2 view .LVU13
  66:HADRWARE/TOUCH/touch.c ****     {
  83              		.loc 1 66 37 is_stmt 0 discriminator 2 view .LVU14
  84 0032 0135     		adds	r5, r5, #1
  85              	.LVL9:
  66:HADRWARE/TOUCH/touch.c ****     {
  86              		.loc 1 66 37 discriminator 2 view .LVU15
  87 0034 EDB2     		uxtb	r5, r5
  88              	.LVL10:
  89              	.L2:
ARM GAS  /tmp/ccg34dqb.s 			page 4


  66:HADRWARE/TOUCH/touch.c ****     {
  90              		.loc 1 66 21 is_stmt 1 discriminator 1 view .LVU16
  66:HADRWARE/TOUCH/touch.c ****     {
  91              		.loc 1 66 5 is_stmt 0 discriminator 1 view .LVU17
  92 0036 072D     		cmp	r5, #7
  93 0038 08D8     		bhi	.L7
  68:HADRWARE/TOUCH/touch.c ****         {
  94              		.loc 1 68 9 is_stmt 1 view .LVU18
  68:HADRWARE/TOUCH/touch.c ****         {
  95              		.loc 1 68 12 is_stmt 0 view .LVU19
  96 003a 14F0800F 		tst	r4, #128
  97 003e E3D0     		beq	.L3
  70:HADRWARE/TOUCH/touch.c ****         }
  98              		.loc 1 70 13 is_stmt 1 view .LVU20
  99 0040 0122     		movs	r2, #1
 100 0042 0821     		movs	r1, #8
 101 0044 0248     		ldr	r0, .L8
 102 0046 FFF7FEFF 		bl	sys_gpio_pin_set
 103              	.LVL11:
 104 004a E2E7     		b	.L4
 105              	.L7:
  81:HADRWARE/TOUCH/touch.c ****     }
  82:HADRWARE/TOUCH/touch.c **** }
 106              		.loc 1 82 1 is_stmt 0 view .LVU21
 107 004c 70BD     		pop	{r4, r5, r6, pc}
 108              	.LVL12:
 109              	.L9:
 110              		.loc 1 82 1 view .LVU22
 111 004e 00BF     		.align	2
 112              	.L8:
 113 0050 00200240 		.word	1073881088
 114 0054 001C0240 		.word	1073880064
 115              		.cfi_endproc
 116              	.LFE126:
 118              		.section	.text.tp_read_ad,"ax",%progbits
 119              		.align	1
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv4-sp-d16
 125              	tp_read_ad:
 126              	.LVL13:
 127              	.LFB127:
  83:HADRWARE/TOUCH/touch.c **** 
  84:HADRWARE/TOUCH/touch.c **** /**
  85:HADRWARE/TOUCH/touch.c ****  * @brief       SPI读数据
  86:HADRWARE/TOUCH/touch.c ****  * @note        从触摸屏IC读取adc值
  87:HADRWARE/TOUCH/touch.c ****  * @param       cmd: 指令
  88:HADRWARE/TOUCH/touch.c ****  * @retval      读取到的数据,ADC值(12bit)
  89:HADRWARE/TOUCH/touch.c ****  */
  90:HADRWARE/TOUCH/touch.c **** static uint16_t tp_read_ad(uint8_t cmd)
  91:HADRWARE/TOUCH/touch.c **** {
 128              		.loc 1 91 1 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		.loc 1 91 1 is_stmt 0 view .LVU24
ARM GAS  /tmp/ccg34dqb.s 			page 5


 133 0000 70B5     		push	{r4, r5, r6, lr}
 134              	.LCFI1:
 135              		.cfi_def_cfa_offset 16
 136              		.cfi_offset 4, -16
 137              		.cfi_offset 5, -12
 138              		.cfi_offset 6, -8
 139              		.cfi_offset 14, -4
 140 0002 0546     		mov	r5, r0
  92:HADRWARE/TOUCH/touch.c ****     uint8_t count = 0;
 141              		.loc 1 92 5 is_stmt 1 view .LVU25
 142              	.LVL14:
  93:HADRWARE/TOUCH/touch.c ****     uint16_t num = 0;
 143              		.loc 1 93 5 view .LVU26
  94:HADRWARE/TOUCH/touch.c ****     T_CLK(0);           /* 先拉低时钟 */
 144              		.loc 1 94 5 view .LVU27
 145 0004 2A4C     		ldr	r4, .L16
 146 0006 0022     		movs	r2, #0
 147 0008 4021     		movs	r1, #64
 148 000a 2046     		mov	r0, r4
 149              	.LVL15:
 150              		.loc 1 94 5 is_stmt 0 view .LVU28
 151 000c FFF7FEFF 		bl	sys_gpio_pin_set
 152              	.LVL16:
  95:HADRWARE/TOUCH/touch.c ****     T_MOSI(0);          /* 拉低数据线 */
 153              		.loc 1 95 5 is_stmt 1 view .LVU29
 154 0010 284E     		ldr	r6, .L16+4
 155 0012 0022     		movs	r2, #0
 156 0014 0821     		movs	r1, #8
 157 0016 3046     		mov	r0, r6
 158 0018 FFF7FEFF 		bl	sys_gpio_pin_set
 159              	.LVL17:
  96:HADRWARE/TOUCH/touch.c ****     T_CS(0);            /* 选中触摸屏IC */
 160              		.loc 1 96 5 view .LVU30
 161 001c 0022     		movs	r2, #0
 162 001e 4FF48071 		mov	r1, #256
 163 0022 3046     		mov	r0, r6
 164 0024 FFF7FEFF 		bl	sys_gpio_pin_set
 165              	.LVL18:
  97:HADRWARE/TOUCH/touch.c ****     tp_write_byte(cmd); /* 发送命令字 */
 166              		.loc 1 97 5 view .LVU31
 167 0028 2846     		mov	r0, r5
 168 002a FFF7FEFF 		bl	tp_write_byte
 169              	.LVL19:
  98:HADRWARE/TOUCH/touch.c ****     delay_us(6);        /* ADS7846的转换时间最长为6us */
 170              		.loc 1 98 5 view .LVU32
 171 002e 0620     		movs	r0, #6
 172 0030 FFF7FEFF 		bl	delay_us
 173              	.LVL20:
  99:HADRWARE/TOUCH/touch.c ****     T_CLK(0);
 174              		.loc 1 99 5 view .LVU33
 175 0034 0022     		movs	r2, #0
 176 0036 4021     		movs	r1, #64
 177 0038 2046     		mov	r0, r4
 178 003a FFF7FEFF 		bl	sys_gpio_pin_set
 179              	.LVL21:
 100:HADRWARE/TOUCH/touch.c ****     delay_us(1);
 180              		.loc 1 100 5 view .LVU34
ARM GAS  /tmp/ccg34dqb.s 			page 6


 181 003e 0120     		movs	r0, #1
 182 0040 FFF7FEFF 		bl	delay_us
 183              	.LVL22:
 101:HADRWARE/TOUCH/touch.c ****     T_CLK(1);           /* 给1个时钟，清除BUSY */
 184              		.loc 1 101 5 view .LVU35
 185 0044 0122     		movs	r2, #1
 186 0046 4021     		movs	r1, #64
 187 0048 2046     		mov	r0, r4
 188 004a FFF7FEFF 		bl	sys_gpio_pin_set
 189              	.LVL23:
 102:HADRWARE/TOUCH/touch.c ****     delay_us(1);
 190              		.loc 1 102 5 view .LVU36
 191 004e 0120     		movs	r0, #1
 192 0050 FFF7FEFF 		bl	delay_us
 193              	.LVL24:
 103:HADRWARE/TOUCH/touch.c ****     T_CLK(0);
 194              		.loc 1 103 5 view .LVU37
 195 0054 0022     		movs	r2, #0
 196 0056 4021     		movs	r1, #64
 197 0058 2046     		mov	r0, r4
 198 005a FFF7FEFF 		bl	sys_gpio_pin_set
 199              	.LVL25:
 104:HADRWARE/TOUCH/touch.c **** 
 105:HADRWARE/TOUCH/touch.c ****     for (count = 0; count < 16; count++)    /* 读出16位数据,只有高12位有效 */
 200              		.loc 1 105 5 view .LVU38
  93:HADRWARE/TOUCH/touch.c ****     T_CLK(0);           /* 先拉低时钟 */
 201              		.loc 1 93 14 is_stmt 0 view .LVU39
 202 005e 0024     		movs	r4, #0
 203              		.loc 1 105 16 view .LVU40
 204 0060 2546     		mov	r5, r4
 205              		.loc 1 105 5 view .LVU41
 206 0062 01E0     		b	.L11
 207              	.LVL26:
 208              	.L12:
 209              		.loc 1 105 33 is_stmt 1 discriminator 2 view .LVU42
 210              		.loc 1 105 38 is_stmt 0 discriminator 2 view .LVU43
 211 0064 0135     		adds	r5, r5, #1
 212              	.LVL27:
 213              		.loc 1 105 38 discriminator 2 view .LVU44
 214 0066 EDB2     		uxtb	r5, r5
 215              	.LVL28:
 216              	.L11:
 217              		.loc 1 105 21 is_stmt 1 discriminator 1 view .LVU45
 218              		.loc 1 105 5 is_stmt 0 discriminator 1 view .LVU46
 219 0068 0F2D     		cmp	r5, #15
 220 006a 18D8     		bhi	.L15
 106:HADRWARE/TOUCH/touch.c ****     {
 107:HADRWARE/TOUCH/touch.c ****         num <<= 1;
 221              		.loc 1 107 9 is_stmt 1 view .LVU47
 222              		.loc 1 107 13 is_stmt 0 view .LVU48
 223 006c 6400     		lsls	r4, r4, #1
 224              	.LVL29:
 225              		.loc 1 107 13 view .LVU49
 226 006e A4B2     		uxth	r4, r4
 227              	.LVL30:
 108:HADRWARE/TOUCH/touch.c ****         T_CLK(0);       /* 下降沿有效 */
 228              		.loc 1 108 9 is_stmt 1 view .LVU50
ARM GAS  /tmp/ccg34dqb.s 			page 7


 229 0070 0F4E     		ldr	r6, .L16
 230 0072 0022     		movs	r2, #0
 231 0074 4021     		movs	r1, #64
 232 0076 3046     		mov	r0, r6
 233 0078 FFF7FEFF 		bl	sys_gpio_pin_set
 234              	.LVL31:
 109:HADRWARE/TOUCH/touch.c ****         delay_us(1);
 235              		.loc 1 109 9 view .LVU51
 236 007c 0120     		movs	r0, #1
 237 007e FFF7FEFF 		bl	delay_us
 238              	.LVL32:
 110:HADRWARE/TOUCH/touch.c ****         T_CLK(1);
 239              		.loc 1 110 9 view .LVU52
 240 0082 0122     		movs	r2, #1
 241 0084 4021     		movs	r1, #64
 242 0086 3046     		mov	r0, r6
 243 0088 FFF7FEFF 		bl	sys_gpio_pin_set
 244              	.LVL33:
 111:HADRWARE/TOUCH/touch.c **** 
 112:HADRWARE/TOUCH/touch.c ****         if (T_MISO)num++;
 245              		.loc 1 112 9 view .LVU53
 246              		.loc 1 112 13 is_stmt 0 view .LVU54
 247 008c 0821     		movs	r1, #8
 248 008e 0A48     		ldr	r0, .L16+8
 249 0090 FFF7FEFF 		bl	sys_gpio_pin_get
 250              	.LVL34:
 251              		.loc 1 112 12 view .LVU55
 252 0094 0028     		cmp	r0, #0
 253 0096 E5D0     		beq	.L12
 254              		.loc 1 112 20 is_stmt 1 discriminator 1 view .LVU56
 255              		.loc 1 112 23 is_stmt 0 discriminator 1 view .LVU57
 256 0098 0134     		adds	r4, r4, #1
 257              	.LVL35:
 258              		.loc 1 112 23 discriminator 1 view .LVU58
 259 009a A4B2     		uxth	r4, r4
 260              	.LVL36:
 261              		.loc 1 112 23 discriminator 1 view .LVU59
 262 009c E2E7     		b	.L12
 263              	.L15:
 113:HADRWARE/TOUCH/touch.c ****     }
 114:HADRWARE/TOUCH/touch.c **** 
 115:HADRWARE/TOUCH/touch.c ****     num >>= 4;          /* 只有高12位有效. */
 264              		.loc 1 115 5 is_stmt 1 view .LVU60
 265              		.loc 1 115 9 is_stmt 0 view .LVU61
 266 009e 2409     		lsrs	r4, r4, #4
 267              	.LVL37:
 116:HADRWARE/TOUCH/touch.c ****     T_CS(1);            /* 释放片选 */
 268              		.loc 1 116 5 is_stmt 1 view .LVU62
 269 00a0 0122     		movs	r2, #1
 270 00a2 4FF48071 		mov	r1, #256
 271 00a6 0348     		ldr	r0, .L16+4
 272 00a8 FFF7FEFF 		bl	sys_gpio_pin_set
 273              	.LVL38:
 117:HADRWARE/TOUCH/touch.c ****     return num;
 274              		.loc 1 117 5 view .LVU63
 118:HADRWARE/TOUCH/touch.c **** }
 275              		.loc 1 118 1 is_stmt 0 view .LVU64
ARM GAS  /tmp/ccg34dqb.s 			page 8


 276 00ac 2046     		mov	r0, r4
 277 00ae 70BD     		pop	{r4, r5, r6, pc}
 278              	.LVL39:
 279              	.L17:
 280              		.loc 1 118 1 view .LVU65
 281              		.align	2
 282              	.L16:
 283 00b0 001C0240 		.word	1073880064
 284 00b4 00200240 		.word	1073881088
 285 00b8 00180240 		.word	1073879040
 286              		.cfi_endproc
 287              	.LFE127:
 289              		.section	.text.tp_read_xoy,"ax",%progbits
 290              		.align	1
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu fpv4-sp-d16
 296              	tp_read_xoy:
 297              	.LVL40:
 298              	.LFB128:
 119:HADRWARE/TOUCH/touch.c **** 
 120:HADRWARE/TOUCH/touch.c **** /* 电阻触摸驱动芯片 数据采集 滤波用参数 */
 121:HADRWARE/TOUCH/touch.c **** #define TP_READ_TIMES   5       /* 读取次数 */
 122:HADRWARE/TOUCH/touch.c **** #define TP_LOST_VAL     1       /* 丢弃值 */
 123:HADRWARE/TOUCH/touch.c **** 
 124:HADRWARE/TOUCH/touch.c **** /**
 125:HADRWARE/TOUCH/touch.c ****  * @brief       读取一个坐标值(x或者y)
 126:HADRWARE/TOUCH/touch.c ****  * @note        连续读取TP_READ_TIMES次数据,对这些数据升序排列,
 127:HADRWARE/TOUCH/touch.c ****  *              然后去掉最低和最高TP_LOST_VAL个数, 取平均值
 128:HADRWARE/TOUCH/touch.c ****  *              设置时需满足: TP_READ_TIMES > 2*TP_LOST_VAL 的条件
 129:HADRWARE/TOUCH/touch.c ****  *
 130:HADRWARE/TOUCH/touch.c ****  * @param       cmd : 指令
 131:HADRWARE/TOUCH/touch.c ****  *   @arg       0XD0: 读取X轴坐标(@竖屏状态,横屏状态和Y对调.)
 132:HADRWARE/TOUCH/touch.c ****  *   @arg       0XD0: 读取Y轴坐标(@竖屏状态,横屏状态和X对调.)
 133:HADRWARE/TOUCH/touch.c ****  *
 134:HADRWARE/TOUCH/touch.c ****  * @retval      读取到的数据(滤波后的), ADC值(12bit)
 135:HADRWARE/TOUCH/touch.c ****  */
 136:HADRWARE/TOUCH/touch.c **** static uint16_t tp_read_xoy(uint8_t cmd)
 137:HADRWARE/TOUCH/touch.c **** {
 299              		.loc 1 137 1 is_stmt 1 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 16
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              		.loc 1 137 1 is_stmt 0 view .LVU67
 304 0000 30B5     		push	{r4, r5, lr}
 305              	.LCFI2:
 306              		.cfi_def_cfa_offset 12
 307              		.cfi_offset 4, -12
 308              		.cfi_offset 5, -8
 309              		.cfi_offset 14, -4
 310 0002 85B0     		sub	sp, sp, #20
 311              	.LCFI3:
 312              		.cfi_def_cfa_offset 32
 313 0004 0546     		mov	r5, r0
 138:HADRWARE/TOUCH/touch.c ****     uint16_t i, j;
 314              		.loc 1 138 5 is_stmt 1 view .LVU68
ARM GAS  /tmp/ccg34dqb.s 			page 9


 139:HADRWARE/TOUCH/touch.c ****     uint16_t buf[TP_READ_TIMES];
 315              		.loc 1 139 5 view .LVU69
 140:HADRWARE/TOUCH/touch.c ****     uint16_t sum = 0;
 316              		.loc 1 140 5 view .LVU70
 317              	.LVL41:
 141:HADRWARE/TOUCH/touch.c ****     uint16_t temp;
 318              		.loc 1 141 5 view .LVU71
 142:HADRWARE/TOUCH/touch.c **** 
 143:HADRWARE/TOUCH/touch.c ****     for (i = 0; i < TP_READ_TIMES; i++)   /* 先读取TP_READ_TIMES次数据 */
 319              		.loc 1 143 5 view .LVU72
 320              		.loc 1 143 12 is_stmt 0 view .LVU73
 321 0006 0024     		movs	r4, #0
 322              		.loc 1 143 5 view .LVU74
 323 0008 09E0     		b	.L19
 324              	.LVL42:
 325              	.L20:
 144:HADRWARE/TOUCH/touch.c ****     {
 145:HADRWARE/TOUCH/touch.c ****         buf[i] = tp_read_ad(cmd);
 326              		.loc 1 145 9 is_stmt 1 discriminator 3 view .LVU75
 327              		.loc 1 145 18 is_stmt 0 discriminator 3 view .LVU76
 328 000a 2846     		mov	r0, r5
 329 000c FFF7FEFF 		bl	tp_read_ad
 330              	.LVL43:
 331              		.loc 1 145 16 discriminator 3 view .LVU77
 332 0010 04AB     		add	r3, sp, #16
 333 0012 03EB4403 		add	r3, r3, r4, lsl #1
 334 0016 23F80C0C 		strh	r0, [r3, #-12]	@ movhi
 143:HADRWARE/TOUCH/touch.c ****     {
 335              		.loc 1 143 36 is_stmt 1 discriminator 3 view .LVU78
 143:HADRWARE/TOUCH/touch.c ****     {
 336              		.loc 1 143 37 is_stmt 0 discriminator 3 view .LVU79
 337 001a 0134     		adds	r4, r4, #1
 338              	.LVL44:
 143:HADRWARE/TOUCH/touch.c ****     {
 339              		.loc 1 143 37 discriminator 3 view .LVU80
 340 001c A4B2     		uxth	r4, r4
 341              	.LVL45:
 342              	.L19:
 143:HADRWARE/TOUCH/touch.c ****     {
 343              		.loc 1 143 17 is_stmt 1 discriminator 1 view .LVU81
 143:HADRWARE/TOUCH/touch.c ****     {
 344              		.loc 1 143 5 is_stmt 0 discriminator 1 view .LVU82
 345 001e 042C     		cmp	r4, #4
 346 0020 F3D9     		bls	.L20
 146:HADRWARE/TOUCH/touch.c ****     }
 147:HADRWARE/TOUCH/touch.c **** 
 148:HADRWARE/TOUCH/touch.c ****     for (i = 0; i < TP_READ_TIMES - 1; i++)   /* 对数据进行排序 */
 347              		.loc 1 148 12 view .LVU83
 348 0022 0020     		movs	r0, #0
 349 0024 1AE0     		b	.L21
 350              	.LVL46:
 351              	.L23:
 149:HADRWARE/TOUCH/touch.c ****     {
 150:HADRWARE/TOUCH/touch.c ****         for (j = i + 1; j < TP_READ_TIMES; j++)
 352              		.loc 1 150 44 is_stmt 1 discriminator 2 view .LVU84
 353              		.loc 1 150 45 is_stmt 0 discriminator 2 view .LVU85
 354 0026 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccg34dqb.s 			page 10


 355              	.LVL47:
 356              		.loc 1 150 45 discriminator 2 view .LVU86
 357 0028 9BB2     		uxth	r3, r3
 358              	.LVL48:
 359              	.L22:
 360              		.loc 1 150 25 is_stmt 1 discriminator 1 view .LVU87
 361              		.loc 1 150 9 is_stmt 0 discriminator 1 view .LVU88
 362 002a 042B     		cmp	r3, #4
 363 002c 15D8     		bhi	.L29
 151:HADRWARE/TOUCH/touch.c ****         {
 152:HADRWARE/TOUCH/touch.c ****             if (buf[i] > buf[j])   /* 升序排列 */
 364              		.loc 1 152 13 is_stmt 1 view .LVU89
 365              		.loc 1 152 20 is_stmt 0 view .LVU90
 366 002e 04AA     		add	r2, sp, #16
 367 0030 02EB4002 		add	r2, r2, r0, lsl #1
 368 0034 32F80C2C 		ldrh	r2, [r2, #-12]
 369              		.loc 1 152 29 view .LVU91
 370 0038 04A9     		add	r1, sp, #16
 371 003a 01EB4301 		add	r1, r1, r3, lsl #1
 372 003e 31F80C1C 		ldrh	r1, [r1, #-12]
 373              		.loc 1 152 16 view .LVU92
 374 0042 8A42     		cmp	r2, r1
 375 0044 EFD9     		bls	.L23
 153:HADRWARE/TOUCH/touch.c ****             {
 154:HADRWARE/TOUCH/touch.c ****                 temp = buf[i];
 376              		.loc 1 154 17 is_stmt 1 view .LVU93
 377              	.LVL49:
 155:HADRWARE/TOUCH/touch.c ****                 buf[i] = buf[j];
 378              		.loc 1 155 17 view .LVU94
 379              		.loc 1 155 24 is_stmt 0 view .LVU95
 380 0046 04AD     		add	r5, sp, #16
 381 0048 05EB400C 		add	ip, r5, r0, lsl #1
 382 004c 2CF80C1C 		strh	r1, [ip, #-12]	@ movhi
 156:HADRWARE/TOUCH/touch.c ****                 buf[j] = temp;
 383              		.loc 1 156 17 is_stmt 1 view .LVU96
 384              		.loc 1 156 24 is_stmt 0 view .LVU97
 385 0050 05EB4301 		add	r1, r5, r3, lsl #1
 386 0054 21F80C2C 		strh	r2, [r1, #-12]	@ movhi
 387 0058 E5E7     		b	.L23
 388              	.LVL50:
 389              	.L29:
 148:HADRWARE/TOUCH/touch.c ****     {
 390              		.loc 1 148 41 view .LVU98
 391 005a 2046     		mov	r0, r4
 392              	.LVL51:
 393              	.L21:
 148:HADRWARE/TOUCH/touch.c ****     {
 394              		.loc 1 148 17 is_stmt 1 discriminator 1 view .LVU99
 148:HADRWARE/TOUCH/touch.c ****     {
 395              		.loc 1 148 5 is_stmt 0 discriminator 1 view .LVU100
 396 005c 0328     		cmp	r0, #3
 397 005e 03D8     		bhi	.L30
 150:HADRWARE/TOUCH/touch.c ****         {
 398              		.loc 1 150 9 is_stmt 1 view .LVU101
 150:HADRWARE/TOUCH/touch.c ****         {
 399              		.loc 1 150 16 is_stmt 0 view .LVU102
 400 0060 441C     		adds	r4, r0, #1
ARM GAS  /tmp/ccg34dqb.s 			page 11


 401 0062 A4B2     		uxth	r4, r4
 402              	.LVL52:
 150:HADRWARE/TOUCH/touch.c ****         {
 403              		.loc 1 150 16 view .LVU103
 404 0064 2346     		mov	r3, r4
 150:HADRWARE/TOUCH/touch.c ****         {
 405              		.loc 1 150 9 view .LVU104
 406 0066 E0E7     		b	.L22
 407              	.LVL53:
 408              	.L30:
 157:HADRWARE/TOUCH/touch.c ****             }
 158:HADRWARE/TOUCH/touch.c ****         }
 159:HADRWARE/TOUCH/touch.c ****     }
 160:HADRWARE/TOUCH/touch.c **** 
 161:HADRWARE/TOUCH/touch.c ****     sum = 0;
 409              		.loc 1 161 9 view .LVU105
 410 0068 0020     		movs	r0, #0
 411              	.LVL54:
 162:HADRWARE/TOUCH/touch.c **** 
 163:HADRWARE/TOUCH/touch.c ****     for (i = TP_LOST_VAL; i < TP_READ_TIMES - TP_LOST_VAL; i++)   /* 去掉两端的丢弃值 */
 412              		.loc 1 163 12 view .LVU106
 413 006a 0123     		movs	r3, #1
 414 006c 08E0     		b	.L26
 415              	.LVL55:
 416              	.L27:
 164:HADRWARE/TOUCH/touch.c ****     {
 165:HADRWARE/TOUCH/touch.c ****         sum += buf[i];  /* 累加去掉丢弃值以后的数据. */
 417              		.loc 1 165 9 is_stmt 1 discriminator 3 view .LVU107
 418              		.loc 1 165 19 is_stmt 0 discriminator 3 view .LVU108
 419 006e 04AA     		add	r2, sp, #16
 420 0070 02EB4302 		add	r2, r2, r3, lsl #1
 421 0074 32F80C2C 		ldrh	r2, [r2, #-12]
 422              		.loc 1 165 13 discriminator 3 view .LVU109
 423 0078 1044     		add	r0, r0, r2
 424              	.LVL56:
 425              		.loc 1 165 13 discriminator 3 view .LVU110
 426 007a 80B2     		uxth	r0, r0
 427              	.LVL57:
 163:HADRWARE/TOUCH/touch.c ****     {
 428              		.loc 1 163 60 is_stmt 1 discriminator 3 view .LVU111
 163:HADRWARE/TOUCH/touch.c ****     {
 429              		.loc 1 163 61 is_stmt 0 discriminator 3 view .LVU112
 430 007c 0133     		adds	r3, r3, #1
 431              	.LVL58:
 163:HADRWARE/TOUCH/touch.c ****     {
 432              		.loc 1 163 61 discriminator 3 view .LVU113
 433 007e 9BB2     		uxth	r3, r3
 434              	.LVL59:
 435              	.L26:
 163:HADRWARE/TOUCH/touch.c ****     {
 436              		.loc 1 163 27 is_stmt 1 discriminator 1 view .LVU114
 163:HADRWARE/TOUCH/touch.c ****     {
 437              		.loc 1 163 5 is_stmt 0 discriminator 1 view .LVU115
 438 0080 032B     		cmp	r3, #3
 439 0082 F4D9     		bls	.L27
 166:HADRWARE/TOUCH/touch.c ****     }
 167:HADRWARE/TOUCH/touch.c **** 
ARM GAS  /tmp/ccg34dqb.s 			page 12


 168:HADRWARE/TOUCH/touch.c ****     temp = sum / (TP_READ_TIMES - 2 * TP_LOST_VAL); /* 取平均值 */
 440              		.loc 1 168 5 is_stmt 1 view .LVU116
 441              		.loc 1 168 10 is_stmt 0 view .LVU117
 442 0084 034B     		ldr	r3, .L31
 443              	.LVL60:
 444              		.loc 1 168 10 view .LVU118
 445 0086 A3FB0030 		umull	r3, r0, r3, r0
 446              	.LVL61:
 169:HADRWARE/TOUCH/touch.c ****     return temp;
 447              		.loc 1 169 5 is_stmt 1 view .LVU119
 170:HADRWARE/TOUCH/touch.c **** }
 448              		.loc 1 170 1 is_stmt 0 view .LVU120
 449 008a C0F34F00 		ubfx	r0, r0, #1, #16
 450              	.LVL62:
 451              		.loc 1 170 1 view .LVU121
 452 008e 05B0     		add	sp, sp, #20
 453              	.LCFI4:
 454              		.cfi_def_cfa_offset 12
 455              		@ sp needed
 456 0090 30BD     		pop	{r4, r5, pc}
 457              	.L32:
 458 0092 00BF     		.align	2
 459              	.L31:
 460 0094 ABAAAAAA 		.word	-1431655765
 461              		.cfi_endproc
 462              	.LFE128:
 464              		.section	.text.tp_init,"ax",%progbits
 465              		.align	1
 466              		.global	tp_init
 467              		.syntax unified
 468              		.thumb
 469              		.thumb_func
 470              		.fpu fpv4-sp-d16
 472              	tp_init:
 473              	.LFB132:
 171:HADRWARE/TOUCH/touch.c **** 
 172:HADRWARE/TOUCH/touch.c **** /**
 173:HADRWARE/TOUCH/touch.c ****  * @brief       读取x, y坐标
 174:HADRWARE/TOUCH/touch.c ****  * @param       x,y: 读取到的坐标值
 175:HADRWARE/TOUCH/touch.c ****  * @retval      无
 176:HADRWARE/TOUCH/touch.c ****  */
 177:HADRWARE/TOUCH/touch.c **** void tp_read_xy(uint16_t *x, uint16_t *y)
 178:HADRWARE/TOUCH/touch.c **** {
 179:HADRWARE/TOUCH/touch.c ****     uint16_t xval, yval;
 180:HADRWARE/TOUCH/touch.c **** 
 181:HADRWARE/TOUCH/touch.c ****     if (tp_dev.touchtype & 0X01)    /* X,Y方向与屏幕相反 */
 182:HADRWARE/TOUCH/touch.c ****     {
 183:HADRWARE/TOUCH/touch.c ****         xval = tp_read_xoy(0X90);   /* 读取X轴坐标AD值, 并进行方向变换 */
 184:HADRWARE/TOUCH/touch.c ****         yval = tp_read_xoy(0XD0);   /* 读取Y轴坐标AD值 */
 185:HADRWARE/TOUCH/touch.c ****     }
 186:HADRWARE/TOUCH/touch.c ****     else                    /* X,Y方向与屏幕相同 */
 187:HADRWARE/TOUCH/touch.c ****     {
 188:HADRWARE/TOUCH/touch.c ****         xval = tp_read_xoy(0XD0);   /* 读取X轴坐标AD值 */
 189:HADRWARE/TOUCH/touch.c ****         yval = tp_read_xoy(0X90);   /* 读取Y轴坐标AD值 */
 190:HADRWARE/TOUCH/touch.c ****     }
 191:HADRWARE/TOUCH/touch.c **** 
 192:HADRWARE/TOUCH/touch.c ****     *x = xval;
ARM GAS  /tmp/ccg34dqb.s 			page 13


 193:HADRWARE/TOUCH/touch.c ****     *y = yval;
 194:HADRWARE/TOUCH/touch.c **** }
 195:HADRWARE/TOUCH/touch.c **** 
 196:HADRWARE/TOUCH/touch.c **** /* 连续两次读取X,Y坐标的数据误差最大允许值 */
 197:HADRWARE/TOUCH/touch.c **** #define TP_ERR_RANGE    50      /* 误差范围 */
 198:HADRWARE/TOUCH/touch.c **** 
 199:HADRWARE/TOUCH/touch.c **** /**
 200:HADRWARE/TOUCH/touch.c ****  * @brief       连续读取2次触摸IC数据, 并滤波
 201:HADRWARE/TOUCH/touch.c ****  * @note        连续2次读取触摸屏IC,且这两次的偏差不能超过ERR_RANGE,满足
 202:HADRWARE/TOUCH/touch.c ****  *              条件,则认为读数正确,否则读数错误.该函数能大大提高准确度.
 203:HADRWARE/TOUCH/touch.c ****  *
 204:HADRWARE/TOUCH/touch.c ****  * @param       x,y: 读取到的坐标值
 205:HADRWARE/TOUCH/touch.c ****  * @retval      0, 失败; 1, 成功;
 206:HADRWARE/TOUCH/touch.c ****  */
 207:HADRWARE/TOUCH/touch.c **** static uint8_t tp_read_xy2(uint16_t *x, uint16_t *y)
 208:HADRWARE/TOUCH/touch.c **** {
 209:HADRWARE/TOUCH/touch.c ****     uint16_t x1, y1;
 210:HADRWARE/TOUCH/touch.c ****     uint16_t x2, y2;
 211:HADRWARE/TOUCH/touch.c **** 
 212:HADRWARE/TOUCH/touch.c ****     tp_read_xy(&x1, &y1);   /* 读取第一次数据 */
 213:HADRWARE/TOUCH/touch.c ****     tp_read_xy(&x2, &y2);   /* 读取第二次数据 */
 214:HADRWARE/TOUCH/touch.c **** 
 215:HADRWARE/TOUCH/touch.c ****     /* 前后两次采样在+-TP_ERR_RANGE内 */
 216:HADRWARE/TOUCH/touch.c ****     if (((x2 <= x1 && x1 < x2 + TP_ERR_RANGE) || (x1 <= x2 && x2 < x1 + TP_ERR_RANGE)) &&
 217:HADRWARE/TOUCH/touch.c ****             ((y2 <= y1 && y1 < y2 + TP_ERR_RANGE) || (y1 <= y2 && y2 < y1 + TP_ERR_RANGE)))
 218:HADRWARE/TOUCH/touch.c ****     {
 219:HADRWARE/TOUCH/touch.c ****         *x = (x1 + x2) / 2;
 220:HADRWARE/TOUCH/touch.c ****         *y = (y1 + y2) / 2;
 221:HADRWARE/TOUCH/touch.c ****         return 1;
 222:HADRWARE/TOUCH/touch.c ****     }
 223:HADRWARE/TOUCH/touch.c **** 
 224:HADRWARE/TOUCH/touch.c ****     return 0;
 225:HADRWARE/TOUCH/touch.c **** }
 226:HADRWARE/TOUCH/touch.c **** 
 227:HADRWARE/TOUCH/touch.c **** 
 228:HADRWARE/TOUCH/touch.c **** 
 229:HADRWARE/TOUCH/touch.c **** /**
 230:HADRWARE/TOUCH/touch.c ****  * @brief       触摸按键扫描
 231:HADRWARE/TOUCH/touch.c ****  * @param       mode: 坐标模式
 232:HADRWARE/TOUCH/touch.c ****  *   @arg       0, 屏幕坐标;
 233:HADRWARE/TOUCH/touch.c ****  *   @arg       1, 物理坐标(校准等特殊场合用)
 234:HADRWARE/TOUCH/touch.c ****  *
 235:HADRWARE/TOUCH/touch.c ****  * @retval      0, 触屏无触摸; 1, 触屏有触摸;
 236:HADRWARE/TOUCH/touch.c ****  */
 237:HADRWARE/TOUCH/touch.c **** uint8_t tp_scan(uint8_t mode)
 238:HADRWARE/TOUCH/touch.c **** {
 239:HADRWARE/TOUCH/touch.c ****     if (T_PEN == 0)     /* 有按键按下 */
 240:HADRWARE/TOUCH/touch.c ****     {
 241:HADRWARE/TOUCH/touch.c ****         if (mode)       /* 读取物理坐标, 无需转换 */
 242:HADRWARE/TOUCH/touch.c ****         {
 243:HADRWARE/TOUCH/touch.c ****             tp_read_xy2(&tp_dev.x[0], &tp_dev.y[0]);
 244:HADRWARE/TOUCH/touch.c ****         }
 245:HADRWARE/TOUCH/touch.c ****         else if (tp_read_xy2(&tp_dev.x[0], &tp_dev.y[0]))     /* 读取屏幕坐标, 需要转换 */
 246:HADRWARE/TOUCH/touch.c ****         {
 247:HADRWARE/TOUCH/touch.c ****             /* 将X轴 物理坐标转换成逻辑坐标(即对应LCD屏幕上面的X坐标值) */
 248:HADRWARE/TOUCH/touch.c ****             tp_dev.x[0] = (signed short)(tp_dev.x[0] - tp_dev.xc) / tp_dev.xfac + lcddev.width / 2;
 249:HADRWARE/TOUCH/touch.c **** 
ARM GAS  /tmp/ccg34dqb.s 			page 14


 250:HADRWARE/TOUCH/touch.c ****             /* 将Y轴 物理坐标转换成逻辑坐标(即对应LCD屏幕上面的Y坐标值) */
 251:HADRWARE/TOUCH/touch.c ****             tp_dev.y[0] = (signed short)(tp_dev.y[0] - tp_dev.yc) / tp_dev.yfac + lcddev.height / 2
 252:HADRWARE/TOUCH/touch.c ****         }
 253:HADRWARE/TOUCH/touch.c **** 
 254:HADRWARE/TOUCH/touch.c ****         if ((tp_dev.sta & TP_PRES_DOWN) == 0)   /* 之前没有被按下 */
 255:HADRWARE/TOUCH/touch.c ****         {
 256:HADRWARE/TOUCH/touch.c ****             tp_dev.sta = TP_PRES_DOWN | TP_CATH_PRES;   /* 按键按下 */
 257:HADRWARE/TOUCH/touch.c ****             tp_dev.x[CT_MAX_TOUCH - 1] = tp_dev.x[0];   /* 记录第一次按下时的坐标 */
 258:HADRWARE/TOUCH/touch.c ****             tp_dev.y[CT_MAX_TOUCH - 1] = tp_dev.y[0];
 259:HADRWARE/TOUCH/touch.c ****         }
 260:HADRWARE/TOUCH/touch.c ****     }
 261:HADRWARE/TOUCH/touch.c ****     else
 262:HADRWARE/TOUCH/touch.c ****     {
 263:HADRWARE/TOUCH/touch.c ****         if (tp_dev.sta & TP_PRES_DOWN)      /* 之前是被按下的 */
 264:HADRWARE/TOUCH/touch.c ****         {
 265:HADRWARE/TOUCH/touch.c ****             tp_dev.sta &= ~TP_PRES_DOWN;    /* 标记按键松开 */
 266:HADRWARE/TOUCH/touch.c ****         }
 267:HADRWARE/TOUCH/touch.c ****         else     /* 之前就没有被按下 */
 268:HADRWARE/TOUCH/touch.c ****         {
 269:HADRWARE/TOUCH/touch.c ****             tp_dev.x[CT_MAX_TOUCH - 1] = 0;
 270:HADRWARE/TOUCH/touch.c ****             tp_dev.y[CT_MAX_TOUCH - 1] = 0;
 271:HADRWARE/TOUCH/touch.c ****             tp_dev.x[0] = 0xffff;
 272:HADRWARE/TOUCH/touch.c ****             tp_dev.y[0] = 0xffff;
 273:HADRWARE/TOUCH/touch.c ****         }
 274:HADRWARE/TOUCH/touch.c ****     }
 275:HADRWARE/TOUCH/touch.c **** 
 276:HADRWARE/TOUCH/touch.c ****     return tp_dev.sta & TP_PRES_DOWN; /* 返回当前的触屏状态 */
 277:HADRWARE/TOUCH/touch.c **** }
 278:HADRWARE/TOUCH/touch.c **** 
 279:HADRWARE/TOUCH/touch.c **** /* TP_SAVE_ADDR_BASE定义触摸屏校准参数保存在EEPROM里面的位置(起始地址)
 280:HADRWARE/TOUCH/touch.c ****  * 占用空间 : 13字节.
 281:HADRWARE/TOUCH/touch.c ****  */
 282:HADRWARE/TOUCH/touch.c **** #define TP_SAVE_ADDR_BASE   40
 283:HADRWARE/TOUCH/touch.c **** 
 284:HADRWARE/TOUCH/touch.c **** 
 285:HADRWARE/TOUCH/touch.c **** /**
 286:HADRWARE/TOUCH/touch.c ****  * @brief       触摸屏初始化
 287:HADRWARE/TOUCH/touch.c ****  * @param       无
 288:HADRWARE/TOUCH/touch.c ****  * @retval      0,没有进行校准
 289:HADRWARE/TOUCH/touch.c ****  *              1,进行过校准
 290:HADRWARE/TOUCH/touch.c ****  */
 291:HADRWARE/TOUCH/touch.c **** uint8_t tp_init(void)
 292:HADRWARE/TOUCH/touch.c **** {
 474              		.loc 1 292 1 is_stmt 1 view -0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478 0000 38B5     		push	{r3, r4, r5, lr}
 479              	.LCFI5:
 480              		.cfi_def_cfa_offset 16
 481              		.cfi_offset 3, -16
 482              		.cfi_offset 4, -12
 483              		.cfi_offset 5, -8
 484              		.cfi_offset 14, -4
 293:HADRWARE/TOUCH/touch.c ****     tp_dev.touchtype = 0;                   /* 默认设置(电阻屏 & 竖屏) */
 485              		.loc 1 293 5 view .LVU123
 486              		.loc 1 293 22 is_stmt 0 view .LVU124
ARM GAS  /tmp/ccg34dqb.s 			page 15


 487 0002 0B4C     		ldr	r4, .L35
 488 0004 0025     		movs	r5, #0
 489 0006 84F84450 		strb	r5, [r4, #68]
 294:HADRWARE/TOUCH/touch.c ****     tp_dev.touchtype |= lcddev.dir & 0X01;  /* 根据LCD判定是横屏还是竖屏 */
 490              		.loc 1 294 5 is_stmt 1 view .LVU125
 491              		.loc 1 294 31 is_stmt 0 view .LVU126
 492 000a 0A4B     		ldr	r3, .L35+4
 493 000c 93F90630 		ldrsb	r3, [r3, #6]
 494              		.loc 1 294 36 view .LVU127
 495 0010 03F00103 		and	r3, r3, #1
 496              		.loc 1 294 22 view .LVU128
 497 0014 84F84430 		strb	r3, [r4, #68]
 295:HADRWARE/TOUCH/touch.c **** 
 296:HADRWARE/TOUCH/touch.c ****     gt9xxx_init();
 498              		.loc 1 296 5 is_stmt 1 view .LVU129
 499 0018 FFF7FEFF 		bl	gt9xxx_init
 500              	.LVL63:
 297:HADRWARE/TOUCH/touch.c ****     tp_dev.scan = gt9xxx_scan;  /* 扫描函数指向GT9147触摸屏扫描 */
 501              		.loc 1 297 5 view .LVU130
 502              		.loc 1 297 17 is_stmt 0 view .LVU131
 503 001c 064B     		ldr	r3, .L35+8
 504 001e 6360     		str	r3, [r4, #4]
 298:HADRWARE/TOUCH/touch.c ****         
 299:HADRWARE/TOUCH/touch.c ****     tp_dev.touchtype |= 0X80;       /* 电容屏 */
 505              		.loc 1 299 5 is_stmt 1 view .LVU132
 506              		.loc 1 299 22 is_stmt 0 view .LVU133
 507 0020 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 508 0024 63F07F03 		orn	r3, r3, #127
 509 0028 84F84430 		strb	r3, [r4, #68]
 300:HADRWARE/TOUCH/touch.c ****     return 0;
 510              		.loc 1 300 5 is_stmt 1 view .LVU134
 301:HADRWARE/TOUCH/touch.c **** 
 302:HADRWARE/TOUCH/touch.c **** }
 511              		.loc 1 302 1 is_stmt 0 view .LVU135
 512 002c 2846     		mov	r0, r5
 513 002e 38BD     		pop	{r3, r4, r5, pc}
 514              	.L36:
 515              		.align	2
 516              	.L35:
 517 0030 00000000 		.word	.LANCHOR0
 518 0034 00000000 		.word	lcddev
 519 0038 00000000 		.word	gt9xxx_scan
 520              		.cfi_endproc
 521              	.LFE132:
 523              		.section	.text.tp_read_xy,"ax",%progbits
 524              		.align	1
 525              		.global	tp_read_xy
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu fpv4-sp-d16
 531              	tp_read_xy:
 532              	.LVL64:
 533              	.LFB129:
 178:HADRWARE/TOUCH/touch.c ****     uint16_t xval, yval;
 534              		.loc 1 178 1 is_stmt 1 view -0
 535              		.cfi_startproc
ARM GAS  /tmp/ccg34dqb.s 			page 16


 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 178:HADRWARE/TOUCH/touch.c ****     uint16_t xval, yval;
 538              		.loc 1 178 1 is_stmt 0 view .LVU137
 539 0000 70B5     		push	{r4, r5, r6, lr}
 540              	.LCFI6:
 541              		.cfi_def_cfa_offset 16
 542              		.cfi_offset 4, -16
 543              		.cfi_offset 5, -12
 544              		.cfi_offset 6, -8
 545              		.cfi_offset 14, -4
 546 0002 0546     		mov	r5, r0
 547 0004 0C46     		mov	r4, r1
 179:HADRWARE/TOUCH/touch.c **** 
 548              		.loc 1 179 5 is_stmt 1 view .LVU138
 181:HADRWARE/TOUCH/touch.c ****     {
 549              		.loc 1 181 5 view .LVU139
 181:HADRWARE/TOUCH/touch.c ****     {
 550              		.loc 1 181 15 is_stmt 0 view .LVU140
 551 0006 0D4B     		ldr	r3, .L41
 552 0008 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 181:HADRWARE/TOUCH/touch.c ****     {
 553              		.loc 1 181 8 view .LVU141
 554 000c 13F0010F 		tst	r3, #1
 555 0010 0AD0     		beq	.L38
 183:HADRWARE/TOUCH/touch.c ****         yval = tp_read_xoy(0XD0);   /* 读取Y轴坐标AD值 */
 556              		.loc 1 183 9 is_stmt 1 view .LVU142
 183:HADRWARE/TOUCH/touch.c ****         yval = tp_read_xoy(0XD0);   /* 读取Y轴坐标AD值 */
 557              		.loc 1 183 16 is_stmt 0 view .LVU143
 558 0012 9020     		movs	r0, #144
 559              	.LVL65:
 183:HADRWARE/TOUCH/touch.c ****         yval = tp_read_xoy(0XD0);   /* 读取Y轴坐标AD值 */
 560              		.loc 1 183 16 view .LVU144
 561 0014 FFF7FEFF 		bl	tp_read_xoy
 562              	.LVL66:
 183:HADRWARE/TOUCH/touch.c ****         yval = tp_read_xoy(0XD0);   /* 读取Y轴坐标AD值 */
 563              		.loc 1 183 16 view .LVU145
 564 0018 0646     		mov	r6, r0
 565              	.LVL67:
 184:HADRWARE/TOUCH/touch.c ****     }
 566              		.loc 1 184 9 is_stmt 1 view .LVU146
 184:HADRWARE/TOUCH/touch.c ****     }
 567              		.loc 1 184 16 is_stmt 0 view .LVU147
 568 001a D020     		movs	r0, #208
 569 001c FFF7FEFF 		bl	tp_read_xoy
 570              	.LVL68:
 571 0020 0346     		mov	r3, r0
 572              	.LVL69:
 573              	.L39:
 192:HADRWARE/TOUCH/touch.c ****     *y = yval;
 574              		.loc 1 192 5 is_stmt 1 view .LVU148
 192:HADRWARE/TOUCH/touch.c ****     *y = yval;
 575              		.loc 1 192 8 is_stmt 0 view .LVU149
 576 0022 2E80     		strh	r6, [r5]	@ movhi
 193:HADRWARE/TOUCH/touch.c **** }
 577              		.loc 1 193 5 is_stmt 1 view .LVU150
 193:HADRWARE/TOUCH/touch.c **** }
ARM GAS  /tmp/ccg34dqb.s 			page 17


 578              		.loc 1 193 8 is_stmt 0 view .LVU151
 579 0024 2380     		strh	r3, [r4]	@ movhi
 194:HADRWARE/TOUCH/touch.c **** 
 580              		.loc 1 194 1 view .LVU152
 581 0026 70BD     		pop	{r4, r5, r6, pc}
 582              	.LVL70:
 583              	.L38:
 188:HADRWARE/TOUCH/touch.c ****         yval = tp_read_xoy(0X90);   /* 读取Y轴坐标AD值 */
 584              		.loc 1 188 9 is_stmt 1 view .LVU153
 188:HADRWARE/TOUCH/touch.c ****         yval = tp_read_xoy(0X90);   /* 读取Y轴坐标AD值 */
 585              		.loc 1 188 16 is_stmt 0 view .LVU154
 586 0028 D020     		movs	r0, #208
 587              	.LVL71:
 188:HADRWARE/TOUCH/touch.c ****         yval = tp_read_xoy(0X90);   /* 读取Y轴坐标AD值 */
 588              		.loc 1 188 16 view .LVU155
 589 002a FFF7FEFF 		bl	tp_read_xoy
 590              	.LVL72:
 188:HADRWARE/TOUCH/touch.c ****         yval = tp_read_xoy(0X90);   /* 读取Y轴坐标AD值 */
 591              		.loc 1 188 16 view .LVU156
 592 002e 0646     		mov	r6, r0
 593              	.LVL73:
 189:HADRWARE/TOUCH/touch.c ****     }
 594              		.loc 1 189 9 is_stmt 1 view .LVU157
 189:HADRWARE/TOUCH/touch.c ****     }
 595              		.loc 1 189 16 is_stmt 0 view .LVU158
 596 0030 9020     		movs	r0, #144
 597 0032 FFF7FEFF 		bl	tp_read_xoy
 598              	.LVL74:
 599 0036 0346     		mov	r3, r0
 600              	.LVL75:
 189:HADRWARE/TOUCH/touch.c ****     }
 601              		.loc 1 189 16 view .LVU159
 602 0038 F3E7     		b	.L39
 603              	.L42:
 604 003a 00BF     		.align	2
 605              	.L41:
 606 003c 00000000 		.word	.LANCHOR0
 607              		.cfi_endproc
 608              	.LFE129:
 610              		.section	.text.tp_read_xy2,"ax",%progbits
 611              		.align	1
 612              		.syntax unified
 613              		.thumb
 614              		.thumb_func
 615              		.fpu fpv4-sp-d16
 617              	tp_read_xy2:
 618              	.LVL76:
 619              	.LFB130:
 208:HADRWARE/TOUCH/touch.c ****     uint16_t x1, y1;
 620              		.loc 1 208 1 is_stmt 1 view -0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 8
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 208:HADRWARE/TOUCH/touch.c ****     uint16_t x1, y1;
 624              		.loc 1 208 1 is_stmt 0 view .LVU161
 625 0000 30B5     		push	{r4, r5, lr}
 626              	.LCFI7:
ARM GAS  /tmp/ccg34dqb.s 			page 18


 627              		.cfi_def_cfa_offset 12
 628              		.cfi_offset 4, -12
 629              		.cfi_offset 5, -8
 630              		.cfi_offset 14, -4
 631 0002 83B0     		sub	sp, sp, #12
 632              	.LCFI8:
 633              		.cfi_def_cfa_offset 24
 634 0004 0546     		mov	r5, r0
 635 0006 0C46     		mov	r4, r1
 209:HADRWARE/TOUCH/touch.c ****     uint16_t x2, y2;
 636              		.loc 1 209 5 is_stmt 1 view .LVU162
 210:HADRWARE/TOUCH/touch.c **** 
 637              		.loc 1 210 5 view .LVU163
 212:HADRWARE/TOUCH/touch.c ****     tp_read_xy(&x2, &y2);   /* 读取第二次数据 */
 638              		.loc 1 212 5 view .LVU164
 639 0008 01A9     		add	r1, sp, #4
 640              	.LVL77:
 212:HADRWARE/TOUCH/touch.c ****     tp_read_xy(&x2, &y2);   /* 读取第二次数据 */
 641              		.loc 1 212 5 is_stmt 0 view .LVU165
 642 000a 0DF10600 		add	r0, sp, #6
 643              	.LVL78:
 212:HADRWARE/TOUCH/touch.c ****     tp_read_xy(&x2, &y2);   /* 读取第二次数据 */
 644              		.loc 1 212 5 view .LVU166
 645 000e FFF7FEFF 		bl	tp_read_xy
 646              	.LVL79:
 213:HADRWARE/TOUCH/touch.c **** 
 647              		.loc 1 213 5 is_stmt 1 view .LVU167
 648 0012 6946     		mov	r1, sp
 649 0014 0DF10200 		add	r0, sp, #2
 650 0018 FFF7FEFF 		bl	tp_read_xy
 651              	.LVL80:
 216:HADRWARE/TOUCH/touch.c ****             ((y2 <= y1 && y1 < y2 + TP_ERR_RANGE) || (y1 <= y2 && y2 < y1 + TP_ERR_RANGE)))
 652              		.loc 1 216 5 view .LVU168
 216:HADRWARE/TOUCH/touch.c ****             ((y2 <= y1 && y1 < y2 + TP_ERR_RANGE) || (y1 <= y2 && y2 < y1 + TP_ERR_RANGE)))
 653              		.loc 1 216 14 is_stmt 0 view .LVU169
 654 001c BDF80230 		ldrh	r3, [sp, #2]
 655 0020 BDF80620 		ldrh	r2, [sp, #6]
 216:HADRWARE/TOUCH/touch.c ****             ((y2 <= y1 && y1 < y2 + TP_ERR_RANGE) || (y1 <= y2 && y2 < y1 + TP_ERR_RANGE)))
 656              		.loc 1 216 8 view .LVU170
 657 0024 9342     		cmp	r3, r2
 658 0026 03D8     		bhi	.L44
 216:HADRWARE/TOUCH/touch.c ****             ((y2 <= y1 && y1 < y2 + TP_ERR_RANGE) || (y1 <= y2 && y2 < y1 + TP_ERR_RANGE)))
 659              		.loc 1 216 26 discriminator 1 view .LVU171
 660 0028 03F13101 		add	r1, r3, #49
 216:HADRWARE/TOUCH/touch.c ****             ((y2 <= y1 && y1 < y2 + TP_ERR_RANGE) || (y1 <= y2 && y2 < y1 + TP_ERR_RANGE)))
 661              		.loc 1 216 20 discriminator 1 view .LVU172
 662 002c 9142     		cmp	r1, r2
 663 002e 05DA     		bge	.L45
 664              	.L44:
 216:HADRWARE/TOUCH/touch.c ****             ((y2 <= y1 && y1 < y2 + TP_ERR_RANGE) || (y1 <= y2 && y2 < y1 + TP_ERR_RANGE)))
 665              		.loc 1 216 47 discriminator 4 view .LVU173
 666 0030 9342     		cmp	r3, r2
 667 0032 20D3     		bcc	.L49
 216:HADRWARE/TOUCH/touch.c ****             ((y2 <= y1 && y1 < y2 + TP_ERR_RANGE) || (y1 <= y2 && y2 < y1 + TP_ERR_RANGE)))
 668              		.loc 1 216 66 discriminator 5 view .LVU174
 669 0034 02F13101 		add	r1, r2, #49
 216:HADRWARE/TOUCH/touch.c ****             ((y2 <= y1 && y1 < y2 + TP_ERR_RANGE) || (y1 <= y2 && y2 < y1 + TP_ERR_RANGE)))
ARM GAS  /tmp/ccg34dqb.s 			page 19


 670              		.loc 1 216 60 discriminator 5 view .LVU175
 671 0038 9942     		cmp	r1, r3
 672 003a 1FDB     		blt	.L50
 673              	.L45:
 217:HADRWARE/TOUCH/touch.c ****     {
 674              		.loc 1 217 18 discriminator 6 view .LVU176
 675 003c BDF80000 		ldrh	r0, [sp]
 676 0040 BDF80410 		ldrh	r1, [sp, #4]
 216:HADRWARE/TOUCH/touch.c ****             ((y2 <= y1 && y1 < y2 + TP_ERR_RANGE) || (y1 <= y2 && y2 < y1 + TP_ERR_RANGE)))
 677              		.loc 1 216 88 discriminator 6 view .LVU177
 678 0044 8842     		cmp	r0, r1
 679 0046 03D8     		bhi	.L47
 217:HADRWARE/TOUCH/touch.c ****     {
 680              		.loc 1 217 30 view .LVU178
 681 0048 00F1310C 		add	ip, r0, #49
 217:HADRWARE/TOUCH/touch.c ****     {
 682              		.loc 1 217 24 view .LVU179
 683 004c 8C45     		cmp	ip, r1
 684 004e 06DA     		bge	.L48
 685              	.L47:
 217:HADRWARE/TOUCH/touch.c ****     {
 686              		.loc 1 217 51 discriminator 1 view .LVU180
 687 0050 8842     		cmp	r0, r1
 688 0052 15D3     		bcc	.L51
 217:HADRWARE/TOUCH/touch.c ****     {
 689              		.loc 1 217 70 discriminator 2 view .LVU181
 690 0054 3131     		adds	r1, r1, #49
 217:HADRWARE/TOUCH/touch.c ****     {
 691              		.loc 1 217 64 discriminator 2 view .LVU182
 692 0056 8142     		cmp	r1, r0
 693 0058 01DA     		bge	.L48
 224:HADRWARE/TOUCH/touch.c **** }
 694              		.loc 1 224 12 view .LVU183
 695 005a 0020     		movs	r0, #0
 696 005c 0CE0     		b	.L46
 697              	.L48:
 219:HADRWARE/TOUCH/touch.c ****         *y = (y1 + y2) / 2;
 698              		.loc 1 219 9 is_stmt 1 view .LVU184
 219:HADRWARE/TOUCH/touch.c ****         *y = (y1 + y2) / 2;
 699              		.loc 1 219 24 is_stmt 0 view .LVU185
 700 005e 1344     		add	r3, r3, r2
 701 0060 5B10     		asrs	r3, r3, #1
 219:HADRWARE/TOUCH/touch.c ****         *y = (y1 + y2) / 2;
 702              		.loc 1 219 12 view .LVU186
 703 0062 2B80     		strh	r3, [r5]	@ movhi
 220:HADRWARE/TOUCH/touch.c ****         return 1;
 704              		.loc 1 220 9 is_stmt 1 view .LVU187
 220:HADRWARE/TOUCH/touch.c ****         return 1;
 705              		.loc 1 220 18 is_stmt 0 view .LVU188
 706 0064 BDF80430 		ldrh	r3, [sp, #4]
 707 0068 BDF80020 		ldrh	r2, [sp]
 220:HADRWARE/TOUCH/touch.c ****         return 1;
 708              		.loc 1 220 24 view .LVU189
 709 006c 1344     		add	r3, r3, r2
 710 006e 5B10     		asrs	r3, r3, #1
 220:HADRWARE/TOUCH/touch.c ****         return 1;
 711              		.loc 1 220 12 view .LVU190
ARM GAS  /tmp/ccg34dqb.s 			page 20


 712 0070 2380     		strh	r3, [r4]	@ movhi
 221:HADRWARE/TOUCH/touch.c ****     }
 713              		.loc 1 221 9 is_stmt 1 view .LVU191
 221:HADRWARE/TOUCH/touch.c ****     }
 714              		.loc 1 221 16 is_stmt 0 view .LVU192
 715 0072 0120     		movs	r0, #1
 716 0074 00E0     		b	.L46
 717              	.L49:
 224:HADRWARE/TOUCH/touch.c **** }
 718              		.loc 1 224 12 view .LVU193
 719 0076 0020     		movs	r0, #0
 720              	.L46:
 225:HADRWARE/TOUCH/touch.c **** 
 721              		.loc 1 225 1 view .LVU194
 722 0078 03B0     		add	sp, sp, #12
 723              	.LCFI9:
 724              		.cfi_remember_state
 725              		.cfi_def_cfa_offset 12
 726              		@ sp needed
 727 007a 30BD     		pop	{r4, r5, pc}
 728              	.LVL81:
 729              	.L50:
 730              	.LCFI10:
 731              		.cfi_restore_state
 224:HADRWARE/TOUCH/touch.c **** }
 732              		.loc 1 224 12 view .LVU195
 733 007c 0020     		movs	r0, #0
 734 007e FBE7     		b	.L46
 735              	.L51:
 736 0080 0020     		movs	r0, #0
 737 0082 F9E7     		b	.L46
 738              		.cfi_endproc
 739              	.LFE130:
 741              		.section	.text.tp_scan,"ax",%progbits
 742              		.align	1
 743              		.global	tp_scan
 744              		.syntax unified
 745              		.thumb
 746              		.thumb_func
 747              		.fpu fpv4-sp-d16
 749              	tp_scan:
 750              	.LVL82:
 751              	.LFB131:
 238:HADRWARE/TOUCH/touch.c ****     if (T_PEN == 0)     /* 有按键按下 */
 752              		.loc 1 238 1 is_stmt 1 view -0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 238:HADRWARE/TOUCH/touch.c ****     if (T_PEN == 0)     /* 有按键按下 */
 756              		.loc 1 238 1 is_stmt 0 view .LVU197
 757 0000 10B5     		push	{r4, lr}
 758              	.LCFI11:
 759              		.cfi_def_cfa_offset 8
 760              		.cfi_offset 4, -8
 761              		.cfi_offset 14, -4
 762 0002 0446     		mov	r4, r0
 239:HADRWARE/TOUCH/touch.c ****     {
ARM GAS  /tmp/ccg34dqb.s 			page 21


 763              		.loc 1 239 5 is_stmt 1 view .LVU198
 239:HADRWARE/TOUCH/touch.c ****     {
 764              		.loc 1 239 9 is_stmt 0 view .LVU199
 765 0004 8021     		movs	r1, #128
 766 0006 3748     		ldr	r0, .L62
 767              	.LVL83:
 239:HADRWARE/TOUCH/touch.c ****     {
 768              		.loc 1 239 9 view .LVU200
 769 0008 FFF7FEFF 		bl	sys_gpio_pin_get
 770              	.LVL84:
 239:HADRWARE/TOUCH/touch.c ****     {
 771              		.loc 1 239 8 view .LVU201
 772 000c 0028     		cmp	r0, #0
 773 000e 54D1     		bne	.L55
 241:HADRWARE/TOUCH/touch.c ****         {
 774              		.loc 1 241 9 is_stmt 1 view .LVU202
 241:HADRWARE/TOUCH/touch.c ****         {
 775              		.loc 1 241 12 is_stmt 0 view .LVU203
 776 0010 A4B1     		cbz	r4, .L56
 243:HADRWARE/TOUCH/touch.c ****         }
 777              		.loc 1 243 13 is_stmt 1 view .LVU204
 778 0012 3548     		ldr	r0, .L62+4
 779 0014 00F12001 		add	r1, r0, #32
 780 0018 0C30     		adds	r0, r0, #12
 781 001a FFF7FEFF 		bl	tp_read_xy2
 782              	.LVL85:
 783              	.L57:
 254:HADRWARE/TOUCH/touch.c ****         {
 784              		.loc 1 254 9 view .LVU205
 254:HADRWARE/TOUCH/touch.c ****         {
 785              		.loc 1 254 41 is_stmt 0 view .LVU206
 786 001e 324B     		ldr	r3, .L62+4
 787 0020 B3F93430 		ldrsh	r3, [r3, #52]
 254:HADRWARE/TOUCH/touch.c ****         {
 788              		.loc 1 254 12 view .LVU207
 789 0024 002B     		cmp	r3, #0
 790 0026 07DB     		blt	.L58
 256:HADRWARE/TOUCH/touch.c ****             tp_dev.x[CT_MAX_TOUCH - 1] = tp_dev.x[0];   /* 记录第一次按下时的坐标 */
 791              		.loc 1 256 13 is_stmt 1 view .LVU208
 256:HADRWARE/TOUCH/touch.c ****             tp_dev.x[CT_MAX_TOUCH - 1] = tp_dev.x[0];   /* 记录第一次按下时的坐标 */
 792              		.loc 1 256 24 is_stmt 0 view .LVU209
 793 0028 2F4B     		ldr	r3, .L62+4
 794 002a 4FF44042 		mov	r2, #49152
 795 002e 9A86     		strh	r2, [r3, #52]	@ movhi
 257:HADRWARE/TOUCH/touch.c ****             tp_dev.y[CT_MAX_TOUCH - 1] = tp_dev.y[0];
 796              		.loc 1 257 13 is_stmt 1 view .LVU210
 257:HADRWARE/TOUCH/touch.c ****             tp_dev.y[CT_MAX_TOUCH - 1] = tp_dev.y[0];
 797              		.loc 1 257 50 is_stmt 0 view .LVU211
 798 0030 9A89     		ldrh	r2, [r3, #12]
 257:HADRWARE/TOUCH/touch.c ****             tp_dev.y[CT_MAX_TOUCH - 1] = tp_dev.y[0];
 799              		.loc 1 257 40 view .LVU212
 800 0032 DA83     		strh	r2, [r3, #30]	@ movhi
 258:HADRWARE/TOUCH/touch.c ****         }
 801              		.loc 1 258 13 is_stmt 1 view .LVU213
 258:HADRWARE/TOUCH/touch.c ****         }
 802              		.loc 1 258 50 is_stmt 0 view .LVU214
 803 0034 1A8C     		ldrh	r2, [r3, #32]
ARM GAS  /tmp/ccg34dqb.s 			page 22


 258:HADRWARE/TOUCH/touch.c ****         }
 804              		.loc 1 258 40 view .LVU215
 805 0036 5A86     		strh	r2, [r3, #50]	@ movhi
 806              	.L58:
 276:HADRWARE/TOUCH/touch.c **** }
 807              		.loc 1 276 5 is_stmt 1 view .LVU216
 277:HADRWARE/TOUCH/touch.c **** 
 808              		.loc 1 277 1 is_stmt 0 view .LVU217
 809 0038 0020     		movs	r0, #0
 810 003a 10BD     		pop	{r4, pc}
 811              	.L56:
 245:HADRWARE/TOUCH/touch.c ****         {
 812              		.loc 1 245 14 is_stmt 1 view .LVU218
 245:HADRWARE/TOUCH/touch.c ****         {
 813              		.loc 1 245 18 is_stmt 0 view .LVU219
 814 003c 2A48     		ldr	r0, .L62+4
 815 003e 00F12001 		add	r1, r0, #32
 816 0042 0C30     		adds	r0, r0, #12
 817 0044 FFF7FEFF 		bl	tp_read_xy2
 818              	.LVL86:
 245:HADRWARE/TOUCH/touch.c ****         {
 819              		.loc 1 245 17 view .LVU220
 820 0048 0028     		cmp	r0, #0
 821 004a E8D0     		beq	.L57
 248:HADRWARE/TOUCH/touch.c **** 
 822              		.loc 1 248 13 is_stmt 1 view .LVU221
 248:HADRWARE/TOUCH/touch.c **** 
 823              		.loc 1 248 50 is_stmt 0 view .LVU222
 824 004c 264A     		ldr	r2, .L62+4
 825 004e 9389     		ldrh	r3, [r2, #12]
 248:HADRWARE/TOUCH/touch.c **** 
 826              		.loc 1 248 62 view .LVU223
 827 0050 B2F84010 		ldrh	r1, [r2, #64]
 248:HADRWARE/TOUCH/touch.c **** 
 828              		.loc 1 248 54 view .LVU224
 829 0054 5B1A     		subs	r3, r3, r1
 248:HADRWARE/TOUCH/touch.c **** 
 830              		.loc 1 248 27 view .LVU225
 831 0056 1BB2     		sxth	r3, r3
 248:HADRWARE/TOUCH/touch.c **** 
 832              		.loc 1 248 75 view .LVU226
 833 0058 D2ED0E7A 		vldr.32	s15, [r2, #56]
 248:HADRWARE/TOUCH/touch.c **** 
 834              		.loc 1 248 67 view .LVU227
 835 005c 07EE103A 		vmov	s14, r3	@ int
 836 0060 B8EEC77A 		vcvt.f32.s32	s14, s14
 837 0064 C7EE276A 		vdiv.f32	s13, s14, s15
 248:HADRWARE/TOUCH/touch.c **** 
 838              		.loc 1 248 89 view .LVU228
 839 0068 2049     		ldr	r1, .L62+8
 840 006a 0B88     		ldrh	r3, [r1]
 248:HADRWARE/TOUCH/touch.c **** 
 841              		.loc 1 248 96 view .LVU229
 842 006c 5B08     		lsrs	r3, r3, #1
 843 006e 07EE903A 		vmov	s15, r3	@ int
 248:HADRWARE/TOUCH/touch.c **** 
 844              		.loc 1 248 81 view .LVU230
ARM GAS  /tmp/ccg34dqb.s 			page 23


 845 0072 F8EEE77A 		vcvt.f32.s32	s15, s15
 846 0076 77EEA67A 		vadd.f32	s15, s15, s13
 248:HADRWARE/TOUCH/touch.c **** 
 847              		.loc 1 248 25 view .LVU231
 848 007a FCEEE77A 		vcvt.u32.f32	s15, s15
 849 007e 17EE903A 		vmov	r3, s15	@ int
 850 0082 9381     		strh	r3, [r2, #12]	@ movhi
 251:HADRWARE/TOUCH/touch.c ****         }
 851              		.loc 1 251 13 is_stmt 1 view .LVU232
 251:HADRWARE/TOUCH/touch.c ****         }
 852              		.loc 1 251 50 is_stmt 0 view .LVU233
 853 0084 138C     		ldrh	r3, [r2, #32]
 251:HADRWARE/TOUCH/touch.c ****         }
 854              		.loc 1 251 62 view .LVU234
 855 0086 B2F84200 		ldrh	r0, [r2, #66]
 251:HADRWARE/TOUCH/touch.c ****         }
 856              		.loc 1 251 54 view .LVU235
 857 008a 1B1A     		subs	r3, r3, r0
 251:HADRWARE/TOUCH/touch.c ****         }
 858              		.loc 1 251 27 view .LVU236
 859 008c 1BB2     		sxth	r3, r3
 251:HADRWARE/TOUCH/touch.c ****         }
 860              		.loc 1 251 75 view .LVU237
 861 008e D2ED0F7A 		vldr.32	s15, [r2, #60]
 251:HADRWARE/TOUCH/touch.c ****         }
 862              		.loc 1 251 67 view .LVU238
 863 0092 07EE103A 		vmov	s14, r3	@ int
 864 0096 B8EEC77A 		vcvt.f32.s32	s14, s14
 865 009a C7EE276A 		vdiv.f32	s13, s14, s15
 251:HADRWARE/TOUCH/touch.c ****         }
 866              		.loc 1 251 89 view .LVU239
 867 009e 4B88     		ldrh	r3, [r1, #2]
 251:HADRWARE/TOUCH/touch.c ****         }
 868              		.loc 1 251 97 view .LVU240
 869 00a0 5B08     		lsrs	r3, r3, #1
 870 00a2 07EE903A 		vmov	s15, r3	@ int
 251:HADRWARE/TOUCH/touch.c ****         }
 871              		.loc 1 251 81 view .LVU241
 872 00a6 F8EEE77A 		vcvt.f32.s32	s15, s15
 873 00aa 77EEA67A 		vadd.f32	s15, s15, s13
 251:HADRWARE/TOUCH/touch.c ****         }
 874              		.loc 1 251 25 view .LVU242
 875 00ae FCEEE77A 		vcvt.u32.f32	s15, s15
 876 00b2 17EE903A 		vmov	r3, s15	@ int
 877 00b6 1384     		strh	r3, [r2, #32]	@ movhi
 878 00b8 B1E7     		b	.L57
 879              	.L55:
 263:HADRWARE/TOUCH/touch.c ****         {
 880              		.loc 1 263 9 is_stmt 1 view .LVU243
 263:HADRWARE/TOUCH/touch.c ****         {
 881              		.loc 1 263 19 is_stmt 0 view .LVU244
 882 00ba 0B4B     		ldr	r3, .L62+4
 883 00bc 9A8E     		ldrh	r2, [r3, #52]
 263:HADRWARE/TOUCH/touch.c ****         {
 884              		.loc 1 263 13 view .LVU245
 885 00be B3F93430 		ldrsh	r3, [r3, #52]
 263:HADRWARE/TOUCH/touch.c ****         {
ARM GAS  /tmp/ccg34dqb.s 			page 24


 886              		.loc 1 263 12 view .LVU246
 887 00c2 002B     		cmp	r3, #0
 888 00c4 08DB     		blt	.L61
 269:HADRWARE/TOUCH/touch.c ****             tp_dev.y[CT_MAX_TOUCH - 1] = 0;
 889              		.loc 1 269 13 is_stmt 1 view .LVU247
 269:HADRWARE/TOUCH/touch.c ****             tp_dev.y[CT_MAX_TOUCH - 1] = 0;
 890              		.loc 1 269 40 is_stmt 0 view .LVU248
 891 00c6 084B     		ldr	r3, .L62+4
 892 00c8 0022     		movs	r2, #0
 893 00ca DA83     		strh	r2, [r3, #30]	@ movhi
 270:HADRWARE/TOUCH/touch.c ****             tp_dev.x[0] = 0xffff;
 894              		.loc 1 270 13 is_stmt 1 view .LVU249
 270:HADRWARE/TOUCH/touch.c ****             tp_dev.x[0] = 0xffff;
 895              		.loc 1 270 40 is_stmt 0 view .LVU250
 896 00cc 5A86     		strh	r2, [r3, #50]	@ movhi
 271:HADRWARE/TOUCH/touch.c ****             tp_dev.y[0] = 0xffff;
 897              		.loc 1 271 13 is_stmt 1 view .LVU251
 271:HADRWARE/TOUCH/touch.c ****             tp_dev.y[0] = 0xffff;
 898              		.loc 1 271 25 is_stmt 0 view .LVU252
 899 00ce 4FF6FF72 		movw	r2, #65535
 900 00d2 9A81     		strh	r2, [r3, #12]	@ movhi
 272:HADRWARE/TOUCH/touch.c ****         }
 901              		.loc 1 272 13 is_stmt 1 view .LVU253
 272:HADRWARE/TOUCH/touch.c ****         }
 902              		.loc 1 272 25 is_stmt 0 view .LVU254
 903 00d4 1A84     		strh	r2, [r3, #32]	@ movhi
 904 00d6 AFE7     		b	.L58
 905              	.L61:
 265:HADRWARE/TOUCH/touch.c ****         }
 906              		.loc 1 265 13 is_stmt 1 view .LVU255
 265:HADRWARE/TOUCH/touch.c ****         }
 907              		.loc 1 265 24 is_stmt 0 view .LVU256
 908 00d8 C2F30E02 		ubfx	r2, r2, #0, #15
 909 00dc 024B     		ldr	r3, .L62+4
 910 00de 9A86     		strh	r2, [r3, #52]	@ movhi
 911 00e0 AAE7     		b	.L58
 912              	.L63:
 913 00e2 00BF     		.align	2
 914              	.L62:
 915 00e4 001C0240 		.word	1073880064
 916 00e8 00000000 		.word	.LANCHOR0
 917 00ec 00000000 		.word	lcddev
 918              		.cfi_endproc
 919              	.LFE131:
 921              		.global	tp_dev
 922              		.section	.data.tp_dev,"aw"
 923              		.align	2
 924              		.set	.LANCHOR0,. + 0
 927              	tp_dev:
 928 0000 00000000 		.word	tp_init
 929 0004 00000000 		.word	tp_scan
 930 0008 00000000 		.word	0
 931 000c 0000     		.short	0
 932 000e 0000     		.short	0
 933 0010 0000     		.short	0
 934 0012 0000     		.short	0
 935 0014 0000     		.short	0
ARM GAS  /tmp/ccg34dqb.s 			page 25


 936 0016 0000     		.short	0
 937 0018 0000     		.short	0
 938 001a 00000000 		.space	6
 938      0000
 939 0020 00000000 		.space	40
 939      00000000 
 939      00000000 
 939      00000000 
 939      00000000 
 940              		.text
 941              	.Letext0:
 942              		.file 2 "/home/ktkuri/arm-gcc-tools/arm-none-eabi/include/machine/_default_types.h"
 943              		.file 3 "/home/ktkuri/arm-gcc-tools/arm-none-eabi/include/sys/_stdint.h"
 944              		.file 4 "Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 945              		.file 5 "HADRWARE/TOUCH/touch.h"
 946              		.file 6 "HADRWARE/LCD/lcd.h"
 947              		.file 7 "HADRWARE/TOUCH/gt9xxx.h"
 948              		.file 8 "SYSTEM/sys/sys.h"
 949              		.file 9 "SYSTEM/delay/delay.h"
ARM GAS  /tmp/ccg34dqb.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 touch.c
     /tmp/ccg34dqb.s:18     .text.tp_write_byte:0000000000000000 $t
     /tmp/ccg34dqb.s:25     .text.tp_write_byte:0000000000000000 tp_write_byte
     /tmp/ccg34dqb.s:113    .text.tp_write_byte:0000000000000050 $d
     /tmp/ccg34dqb.s:119    .text.tp_read_ad:0000000000000000 $t
     /tmp/ccg34dqb.s:125    .text.tp_read_ad:0000000000000000 tp_read_ad
     /tmp/ccg34dqb.s:283    .text.tp_read_ad:00000000000000b0 $d
     /tmp/ccg34dqb.s:290    .text.tp_read_xoy:0000000000000000 $t
     /tmp/ccg34dqb.s:296    .text.tp_read_xoy:0000000000000000 tp_read_xoy
     /tmp/ccg34dqb.s:460    .text.tp_read_xoy:0000000000000094 $d
     /tmp/ccg34dqb.s:465    .text.tp_init:0000000000000000 $t
     /tmp/ccg34dqb.s:472    .text.tp_init:0000000000000000 tp_init
     /tmp/ccg34dqb.s:517    .text.tp_init:0000000000000030 $d
     /tmp/ccg34dqb.s:524    .text.tp_read_xy:0000000000000000 $t
     /tmp/ccg34dqb.s:531    .text.tp_read_xy:0000000000000000 tp_read_xy
     /tmp/ccg34dqb.s:606    .text.tp_read_xy:000000000000003c $d
     /tmp/ccg34dqb.s:611    .text.tp_read_xy2:0000000000000000 $t
     /tmp/ccg34dqb.s:617    .text.tp_read_xy2:0000000000000000 tp_read_xy2
     /tmp/ccg34dqb.s:742    .text.tp_scan:0000000000000000 $t
     /tmp/ccg34dqb.s:749    .text.tp_scan:0000000000000000 tp_scan
     /tmp/ccg34dqb.s:915    .text.tp_scan:00000000000000e4 $d
     /tmp/ccg34dqb.s:927    .data.tp_dev:0000000000000000 tp_dev
     /tmp/ccg34dqb.s:923    .data.tp_dev:0000000000000000 $d

UNDEFINED SYMBOLS
sys_gpio_pin_set
delay_us
sys_gpio_pin_get
gt9xxx_init
lcddev
gt9xxx_scan
